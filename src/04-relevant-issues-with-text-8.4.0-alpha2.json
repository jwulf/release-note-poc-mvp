[
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15161",
    "component": "Zeebe",
    "subcomponent": "Java Client",
    "context": "Enhancements",
    "gitHubText": "We want to make it possible for users of the Java client to migrate process instances through the API.\r\n\r\nTo unblock Operate early, we want to provide the interfaces of the Java client without the full implementation. This allows them to start development against these interfaces.\n",
    "title": "Provide the Java client's interfaces for migrating a process instance"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14921",
    "component": "Zeebe",
    "subcomponent": "Java Client",
    "context": "Enhancements",
    "gitHubText": "We want to make it possible for users of the Java client to migrate process instances through the API.\r\n\r\nThe Java client should make it easy to reuse a migration plan for migrating several process instances. This issue will contain the implementation of the Java client's interfaces for migrating a process instance.\r\n\r\nBlocked by\r\n- https://github.com/camunda/zeebe/issues/15161\r\n- https://github.com/camunda/zeebe/issues/15119\n",
    "title": "Support migrating a process instance from the Java client"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15153",
    "component": "Zeebe",
    "subcomponent": "Go Client",
    "context": "Enhancements",
    "gitHubText": "### Description\r\n\r\nThe Zeebe Go client should support multi-tenancy.\r\n\r\nThe following commands should provide a method to set a `tenantId`:\r\n* `DeployResource`\r\n* `CreateProcessInstance`\r\n* `PublishMessage`\r\n* `BroadcastSignal`\r\n* `EvaluateDecision`\r\n\r\nThe following commands should provide a method to set `tenantIds`:\r\n* `ActivateJobs`\n",
    "title": "Go client commands allow specifying a `tenantId` / `tenantIds` property"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14477",
    "component": "Zeebe",
    "subcomponent": "Go Client",
    "context": "Enhancements",
    "gitHubText": "### Description\r\n\r\nThe Zeebe Go client should support multi-tenancy.\r\n\r\n```[tasklist]\r\n### Tasks\r\n- [ ] https://github.com/camunda/zeebe/issues/15153\r\n- [ ] https://github.com/camunda/zeebe/issues/15095\r\n- [ ] https://github.com/camunda/zeebe/issues/15096\r\n- [ ] https://github.com/camunda/zeebe/issues/15097\r\n- [ ] https://github.com/camunda/camunda-docs/issues/2893\r\n```\r\n\n\n Sijoma: Picked this up and created: https://github.com/camunda/zeebe/pull/14946\n koevskinikola: I've converted this issue to an umbrella issue that covers all the sub-tasks needed to support multi-tenancy for the Go client. I moved the previous issue description to #15153 and re-assigned [the related PR ](https://github.com/camunda/zeebe/pull/14946)there.\n koevskinikola: ZPA team:\r\nMoving this issue back to the `Backlog` column of the ZPA project board, as this feature was deprioritized until `8.5`.\r\n\r\nI also removed the `target:8.4` label.\n koevskinikola: Closing as this topic has been de-prioritized and it is currently not clear if/when it will be picked up again.",
    "title": "Add multi-tenancy support in the Zeebe Go client"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/6150",
    "component": "Zeebe",
    "subcomponent": "Go Client",
    "context": "Enhancements",
    "gitHubText": "**Description**\r\n\r\n#6093 provides a backoff mechanism for the java client's job worker. When an error is received from the gateway by the job poller, the worker delays its next poll for available jobs. The go client should support the same functionality.\r\n\r\nThis functionality should be the same as the java client's. Including:\r\n- a default exponential backoff mechanism with the same defaults: {maxDelay:5s, minDelay:50ms, backoffFactor:1.6, jitterFactor:0.1}\r\n- the exponential backoff should be configurable\r\n- users should be able to provide their own implementation of a backoff strategy\r\n- backoff should only occur on errors received on the poll for available jobs\n\n Sijoma: Hey yall, I did a implementation for this for the go client. I'm a bit unsure in which cases the backoff should be applied though. \r\n\r\nIs it every time there is a ResourceExhausted? Or also when it fails to reopen the job polling stream? Is here: `clients/go/pkg/worker/jobPoller.go:95` the correct place?\r\n\r\n\n korthout: The backoff should be applied when the job poller fails to ask for jobs from the gateway. For example, in Java, [it backs off when any exception is thrown during the polling for jobs](https://github.com/camunda/zeebe/blob/069c17a74398d291b95d1c761357a457c62257ae/clients/java/src/main/java/io/zeebe/client/impl/worker/JobWorkerImpl.java#L136-L147). So that it actually controlled from the JobWorker, the poller is just used once in a while by the job worker.\r\n\r\nThis seems to happen differently in the go client, but the details are a bit unclear to me. Somewhere [around here](https://github.com/camunda/zeebe/blob/main/clients/go/pkg/worker/jobPoller.go#L77-L114) would be my guess. \r\n\r\nI think that this part is the [main loop](https://github.com/camunda/zeebe/blob/main/clients/go/pkg/worker/jobPoller.go#L47-L71) for the poller. It seems to:\r\n- poll for jobs, and add them to the job queue\r\n- determine if it if needs to poll again\r\n\r\nSo, what is needed is some way to backoff from polling when an error occurs during polling. There are [other errors](https://docs.camunda.io/docs/apis-clients/grpc/#technical-error-handling) than `RESOURCE_EXHAUSTED` that could occur during polling.\n Sijoma: Thanks for the info @korthout, indeed it looks a bit differently in the go client. I will put in a draft-pr :). ",
    "title": "go-client: Job worker polling backoff mechanism"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15391",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "**Is your feature request related to a problem? Please describe.**\r\nTo add support for authentication via [Microsoft Entra ID (Azure AD) and generic OpenID Connect](https://github.com/camunda/product-hub/issues/739) it is required to set the `scope` parameter in the token request, see [Microsoft Entra ID docs](https://learn.microsoft.com/en-us/entra/identity-platform/v2-oauth2-client-creds-grant-flow#first-case-access-token-request-with-a-shared-secret). Currently the Zeebe java client does not support setting the `scope` parameter.\r\n\r\n**Describe the solution you'd like**\r\nThe Zeebe client supports setting the `scope` parameter in the token request (for example in https://github.com/camunda/zeebe/blob/main/clients/java/src/main/java/io/camunda/zeebe/client/impl/oauth/OAuthCredentialsProvider.java#L125)\r\n\r\n**Describe alternatives you've considered**\r\nUse Identity-sdk which supports creating auth tokens.\r\n\r\n**Additional context**\r\n- When using Microsoft Entra ID, the scope parameter has to contain the client api in a specific format, for example `scope=4393964b-2273-4b23-94fa-98c3d2396b1e/.default`\r\n- The additional parameter has to also be integrated into [`spring-zeebe`](https://github.com/camunda-community-hub/spring-zeebe) since it is used by Connectors\n\n megglos: > The additional parameter has to also be integrated into [spring-zeebe](https://github.com/camunda-community-hub/spring-zeebe) since it is used by Connectors\r\n\r\n@dlavrenuek from my understanding, having the env var support in the client which you added with https://github.com/camunda/zeebe/pull/15404 will be enough to make use of it in spring-zeebe, right?\n 1nb0und: 1. Are we also considering adding the scope soon to other components as well (operate, optimize, etc) ?\r\n2. If yes on above, will all components use the same scope, or different components will use its own scope?\r\n\n megglos: @1nb0und best reach out on the product-hub issue https://github.com/camunda/product-hub/issues/739 to the PM and engineering DRI",
    "title": "Allow setting `scope` parameter for OAuth2 authentication"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15389",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "**Is your feature request related to a problem? Please describe.**\r\nCamunda Identity now provides an `identity-spring-boot-starter` which, in turn, provides an `IdentityConfiguration` Spring bean.\r\n\r\nThe goal is to decouple the Identity configuration properties from the Zeebe configuration classes. The `identity-spring-boot-starter` should create an `IdentityConfiguration` Spring bean, which in turn can be used to configure the `identity-sdk` inside Zeebe. \r\n\r\nThe outcome will be that Zeebe doesn't need to add new Identity configuration properties every time Identity adds them.\r\n\r\n**Describe the solution you'd like**\r\n\r\n- [x] The `IdentityInterceptor` class should create an `Identity` instance using an `IdentityConfiguration` instance ([src](https://github.com/camunda/zeebe/blob/303b0d7bbc60440fee8baaf943ab020d49783d38/gateway/src/main/java/io/camunda/zeebe/gateway/interceptors/impl/IdentityInterceptor.java#L37-L39)).\r\n- [x] The `Gateway` class should pass an `IdentityConfiguration` instance to the `IdentityInterceptor` constructor ([src](https://github.com/camunda/zeebe/blob/b3c3397f10b8e96d12af053ff72d616f80264dca/gateway/src/main/java/io/camunda/zeebe/gateway/Gateway.java#L323-L328)).\r\n- [x] The `StandaloneGateway` class should `Autowire` an `IdentityConfiguration` bean and pass it along to the `Gateway` constructor ([src](https://github.com/camunda/zeebe/blob/44769129dbfbdee7b44889780215d20e395453f2/dist/src/main/java/io/camunda/zeebe/gateway/StandaloneGateway.java#L101-L103)).\r\n- [x] The `EmbeddedGatewayService` class should pass an `IdentityConfiguration` instance to the `Gateway` constructor ([src](https://github.com/camunda/zeebe/blob/de669e90aa74a0330f6e17f07de0b14aa430a2cc/broker/src/main/java/io/camunda/zeebe/broker/system/EmbeddedGatewayService.java#L36-L37)).\r\n   - The `IdentityConfiguration` bean should be passed through the `StandaloneBroker` class ([src](https://github.com/camunda/zeebe/blob/4c4e7d2404f00045e5ac3d033e007e30b063b14c/dist/src/main/java/io/camunda/zeebe/broker/StandaloneBroker.java#L82)).\r\n- [x] The `MultiTenancyOverIdentityIT` test should configure Identity using an `IdentityConfiguration` bean ([src](https://github.com/camunda/zeebe/blob/d98d04cbe6ab675c981aea808566264f8552d647/qa/integration-tests/src/test/java/io/camunda/zeebe/it/multitenancy/MultiTenancyOverIdentityIT.java#L210-L213)).\r\n\r\n\r\n**Describe alternatives you've considered**\r\n- None. Zeebe needs to integrate the `identity-spring-boot-starter` in order to decouple the Identity configuration properties from Zeebe.\r\n\r\n**Additional context**\r\n* https://github.com/camunda/product-hub/issues/1849\r\n* https://github.com/camunda-cloud/identity/issues/2162\r\n\n",
    "title": "Configure `identity-sdk` through `identity-spring-boot-starter` in the Gateway"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15382",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "Add IT tests in the `MultiTenancyOverIdentityIT` test. Some [similar test cases can be found in the same class](https://github.com/camunda/zeebe/blob/d6eaafadfb411f1b30a87022658691ec82c4630c/qa/integration-tests/src/test/java/io/camunda/zeebe/it/multitenancy/MultiTenancyOverIdentityIT.java#L759-L842).\r\n`shouldCompleteJobForTenant` can serve as an example.\n",
    "title": "Add integration test to `MultiTenancyOverIdentityIT` test"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15306",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "**Is your feature request related to a problem? Please describe.**\r\nElasticSearch provides frequent minor updates. Many bug-fixes are provided via minors (and not via patches).\r\nDue to bugs and CVEs we are upgrading our ElasticSearch instances to 8.9+.\r\n\r\n**Describe the solution you'd like**\r\n\r\n- [x] Update Zeebe's ElasticSearch dependencies to 8.9+\r\n- [ ] Update zeebe-analytics dependency \r\n- [x] Make sure tests run successfully\r\n\r\n\r\n**Additional context**\r\nPDP Epic: https://github.com/camunda/product-hub/issues/1902 \n\n korthout: @abbasadel The linked [supported environments specification](https://confluence.camunda.com/display/HAN/Camunda+8+Supported+Environments) mentions ES 8.8+ for the 8.4 instead of 8.9. Are we sure we want to upgrade to 8.9? This should be aligned across the components.\n korthout: ZPA triage:\r\n- If the rest of the platform is upgrading, we should as well\r\n- We should update the dependencies by hand (I believe auto-updates are disabled for ES client)\r\n- We should also update the dependency in zeebe-analytics\r\n- Marking it as upcoming\n abbasadel: @korthout yes, all components are aligned to upgrade to 8.9, as mentioned in https://github.com/camunda/product-hub/issues/1902 ",
    "title": "Support ElasticSearch 8.9+"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15193",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "null\n",
    "title": "Update `broker.yaml.template` and `broker.standalone.yaml.template` files in order to allow user to disable form exporting"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15140",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description\r\n\r\nWe introduced a new compensation record for BPMN compensation events. We should export these events to Elasticsearch and OpenSearch. \r\n\r\nWe should follow the development guide on how to add the record for the exporters [here](https://github.com/camunda/zeebe/blob/main/docs/developer_handbook.md#support-a-recordvalue-in-the-elasticsearch-exporter).\r\n\r\nrequires #15063 \n\n saig0: Done by https://github.com/camunda/zeebe/pull/15392. :rocket: ",
    "title": "Export compensation subscription events"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15114",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "Introduce a new `VariableIntent` `MIGRATED`.\r\n\r\nAdd an event applier that updates the following properties of a variable:\r\n\r\n- `bpmnProcessId`: the BPMN ID of the target process definition\r\n- `processDefinitionVersion`: the version of the target process definition\r\n- `processDefinitionKey`: the key of the target process definition\r\n\r\nIn the `ProcessInstanceMigration` command processor, add:\r\n- for each variable of a process instance:\r\n  - append `Variable:MIGRATED` event\r\n- for each child element instance of the process:\r\n  - append `Variable:MIGRATED` event for each variable at that scope\r\n\r\nMake sure to clear the variable's `value` when appending these events to avoid exceeding the result records batch size.\r\n\r\nAdd a test case that show that we can migrate a process instance, and use the variables in activated jobs and can update the variables with the Set Variables RPC.\r\n\r\n**Alternatively**\r\nFind a way to migrate all variables for a process instance in a single pass. I'm not sure this is possible.\r\n\r\n**Out of scope**\r\nMigrate all variables with a single event.\r\n\r\nBlocked by:\r\n- #15113 \n\n sdorokhova: Hi @korthout , I don't think that variable has `elementId` field. Is this a copy-paste error?\r\nBut variable has `scopeKey` field. Can it change?\n korthout: Good point @sdorokhova, I've removed the `elementId` from the list in the description.\r\n\r\nThe `scopeKey` won't change. Variables will stay existing at the same scope. We're not planning to move variables to different scopes. That might be needed when we make Sub Process hierarchy changes possible, but even then I doubt we'll move variables. If we change our mind on this for future iterations, we'll let you know in time. ",
    "title": "Migrate task instances with variables"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15113",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "Introduce a new `JobIntent` `MIGRATED`.\r\n\r\nAdd an event applier that updates the following properties of a job:\r\n\r\n- `bpmnProcessId`: the BPMN ID of the target process definition\r\n- `processDefinitionVersion`: the version of the target process definition\r\n- `processDefinitionKey`: the key of the target process definition\r\n- `elementId`: changes to the mapped element ID of the associated service task (note that the mapping may define the sourceElementId and the targetElementId as equivalent, in which case it stays the same)\r\n\r\nIn the `ProcessInstanceMigration` command processor, add:\r\n- for each child instance of the process instance:\r\n  - append `ProcessInstance:ELEMENT_MIGRATED` event\r\n  - if this child is of type `SERVICE_TASK`, append `Job:MIGRATED` event\r\n\r\nAdd a test case that show that we can migrate a process instance, and can still use all job commands, e.g. activate, fail, throwError, yield, complete, etc.\r\n\r\nBlocked by:\r\n- https://github.com/camunda/zeebe/issues/15111\n",
    "title": "Migrate service task instances (including jobs)"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15063",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description\r\n\r\nWe need a new record for compensation events. It should be used to:\r\n- Find completed activities with compensation handlers\r\n- Keep track of the compensation handler state: ready for invocation, invoked  \r\n- Find the compensation throw event that triggered a compensation handler\r\n\r\nThe compensation record may contain the following data:\r\n- tenant id\r\n- process instance key\r\n- process definition key\r\n- element id of activity with compensation handler\r\n- flow scope element id of activity with compensation handler\r\n- element id of compensation throw event\r\n- element instance key of compensation throw event\r\n- local variables of activity with compensation handler (i.e. snapshot data for compensation event subprocess)\r\n \r\nThe lifecycle of a compensation record may contain the following states:\r\n\r\n```\r\nCREATED -> TRIGGERED -> COMPLETED | DELETED\r\n```\r\n\r\n- CREATED: \r\n  - when an activity with a compensation boundary event is completed, or\r\n  - when an embedded subprocess with a compensation event subprocess is completed\r\n  - then add the subscription to the state \r\n- TRIGGERED: \r\n  - when the compensation throw event is activated\r\n  - then set the element instance key and element id of the compensation throw event\r\n  - and update the subscription in the state\r\n- COMPLETED: \r\n  - when the compensation handler is completed\r\n  - then remove the subscription from the state\r\n- DELETED: \r\n  - when the process instance is completed or terminated\r\n  - then remove the subscription from the state  \r\n\r\nWe should follow the development guide on how to create a new record [here](https://github.com/camunda/zeebe/blob/main/docs/developer_handbook.md#how-to-create-a-new-record).\n\n saig0: I created a separate issue for exporting these events: #15140. If possible, we can work on the exporters as a follow-up. ",
    "title": "Introduce new compensation subscription record"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15034",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "Add new Intent to the `JobIntent` class\r\n\r\n- `UPDATE_TIMEOUT`\r\nThis command will look for the Job in the state and for it's deadline. If it can't find one of those it will return a `NOT_FOUND` rejection. Otherwise it will write the `TIMEOUT_UPDATED` event which will modify the deadline in the state.\r\n- `TIMEOUT_UPDATED`\r\nThis event will update the `JOB_DEADLINES` ColumnFamily. Since the key of this ColumnFamily is deadline-jockey we can't just update the existing one. Instead we will need to remove the existing entry for this Job, and insert a new value. For this we must have access to the old deadline. This is stored in state and should available through the JobRecord.\n",
    "title": "Add Job Update Timeout intents"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14967",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description \r\n\r\nAs a user, I can deploy a process with a compensation end event. Now, I want to execute the process. In the first step, we want to ignore the invocation of compensation handlers. \r\n\r\n- I can complete a process instance that contains a compensation end event.\r\n- The compensation end event is activated and completed.\r\n- The records for the compensation end event have the event type `COMPENSATION`.\r\n\r\n![Screenshot from 2023-11-02 14-01-15](https://github.com/camunda/zeebe/assets/4305769/97ea69e5-3f3c-4393-82bf-c58bfe11e353)\r\n\r\nrequires #14942 \r\nrequires #14944 \n",
    "title": "I can execute a process with a compensation end event"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14965",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description \r\n\r\nAs a user, I can deploy a process with a compensation intermediate throw event. Now, I want to execute the process. In the first step, we want to ignore the invocation of compensation handlers. \r\n\r\n- I can complete a process instance that contains a compensation intermediate throw event.\r\n- The compensation intermediate throw event is activated and completed.\r\n- The records for the compensation intermediate throw event have the event type `COMPENSATION`.\r\n\r\n![Screenshot from 2023-11-02 13-47-31](https://github.com/camunda/zeebe/assets/4305769/6c13ca34-ab13-4ad1-bcfe-a74cee62e237)\r\n\r\nrequires #14942 \r\nrequires #14944 \n",
    "title": "I can execute a process with an intermediate compensation throw event"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14944",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description \r\n\r\nWhen we execute a BPMN process, we write events of the value type `ProcessInstance`. These events have a field `bpmnEventType`. The field is set for BPMN events with their respective type. \r\n\r\nTo reflect the execution of compensation events, we need to introduce a new [event type](https://github.com/camunda/zeebe/blob/main/protocol/src/main/java/io/camunda/zeebe/protocol/record/value/BpmnEventType.java) `COMPENSATION`. All events related to a BPMN compensation event should have the event type `COMPENSATION` (i.e. compensation intermediate throwing events, compensation end events, compensation boundary events, compensation start events).   \n",
    "title": "The record for a compensation event has the correct event type"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14943",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description\r\n\r\nIn order to execute a process with compensation events, we need to deploy the process first. Currently, it is impossible to deploy a process with compensation event subprocesses because of validation rules.  \r\n\r\nAdjust the validation rules to allow compensation start events within event subprocesses.\r\n\r\nAdditionally, we ensure the following restrictions:\r\n- A compensation start event must be within an event subprocess.\r\n- A compensation event subprocess must be within an embedded subprocess. The event subprocess is not allowed on the process level. \r\n\r\n![Screenshot from 2023-11-01 13-15-57](https://github.com/camunda/zeebe/assets/4305769/4ff1a5e7-600e-42f5-9918-b29d82f3c0e8)\r\n\r\nrequires #14939 \r\nrequires #14942 \n",
    "title": "I can deploy a process with BPMN compensation event subprocesses"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14942",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description\r\n\r\nIn order to execute a process with compensation events, we need to deploy the process first. Currently, it is impossible to deploy a process with compensation events because of validation rules.  \r\n\r\nAdjust the validation rules to allow the following BPMN elements:\r\n- Compensation intermediate throwing event\r\n- Compensation end event\r\n- Compensation boundary event\r\n- Activity with compensation marker (i.e. a compensation handler)\r\n\r\nAdditionally, we ensure the following restrictions:\r\n- A compensation boundary event should have no outgoing sequence flows. The compensation handler is connected by an association. \r\n- A compensation handler should have no incoming and outgoing sequence flows.\r\n- A compensation handler should have no boundary events.\r\n- Only the following activities can have a compensation marker:\r\n  - Service Tasks\r\n  - User Tasks\r\n  - Send Tasks\r\n  - Script Tasks\r\n  - Manual Tasks\r\n  - Undefined Tasks\r\n- A compensation intermediate throwing or end event should have no attribute `waitForCompletion` or `waitForCompletion` must be `true`. By default, the attribute is `true` (i.e. the throwing event waits until the compensation is complete).  \r\n\r\n![Screenshot from 2023-11-01 12-43-10](https://github.com/camunda/zeebe/assets/4305769/1f69fed7-0dcd-48cd-a3ee-a441647c4886)\r\n\r\n\r\nrequires #14939 \n",
    "title": "I can deploy a process with BPMN compensation events"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14939",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "## Description\r\n\r\nThe BPMN model API supports compensation events already. But, creating a process via builder with compensation events is verbose and feels clunky. \r\n\r\nSee the example here:\r\n\r\n```java\r\nBpmn.createExecutableProcess(\"compensation-process\")\r\n            .startEvent()\r\n            .userTask(\"A\")\r\n            .boundaryEvent()\r\n            .compensateEventDefinition()\r\n            .compensateEventDefinitionDone()\r\n            .compensationStart()\r\n            .userTask(\"undo-A\")\r\n            .compensationDone()\r\n            .endEvent()\r\n            .done();\r\n```\r\n\r\n![Screenshot from 2023-11-01 11-10-35](https://github.com/camunda/zeebe/assets/4305769/94e1f994-a3cd-4c4b-9045-01acd38e6ac5)\r\n\r\nWe will need the builder to create test cases for compensation events. Let's make the builder smoother for better test cases.\r\n\r\nSee the proposal based on other events. The final solution may look different. \r\n\r\n```java\r\nBpmn.createExecutableProcess(\"compensation-process\")\r\n        .startEvent()\r\n        .userTask(\"A\")\r\n        .boundaryEvent()\r\n        .compensation(c -> c.userTask(\"undo-A\"))\r\n        .moveToActivity(\"A\")\r\n        .endEvent()\r\n        .done();\r\n\r\n// or via nested lambda definition \r\nBpmn.createExecutableProcess(\"compensation-process\")\r\n        .startEvent()\r\n        .userTask(\"A\")\r\n        .boundaryEvent(\r\n            \"compensate\",\r\n            boundaryEvent -> boundaryEvent.compensation().userTask(\"undo-A\"))\r\n        .endEvent()\r\n        .done();\r\n``` \r\n\r\n\n",
    "title": "I can model a process with compensation events via BPMN model API"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14858",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "**Description**\r\n\r\nBlocked by #14272 \n",
    "title": "Add support to Java client for Form deletion"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14701",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Enhancements",
    "gitHubText": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently we have Dependabot and Renovate in our repo, makes sense to only use one, and Renovate seems to cover all our use cases, unlike Dependabot (see https://github.com/camunda/zeebe/issues/13409).\r\n\r\n**Describe the solution you'd like**\r\n\r\nChange renovate.json to also cover the maven and docker updates. Remove the Dependabot tool for these (do we have other things being updated by Dependabot?).\r\n\r\nThe following command can be used to test renovate locally:\r\n```\r\nnpx renovate --token=$GITHUB_TOKEN --schedule=\"\" --require-config=ignored --dry-run=full camunda/zeebe \r\n\r\n```\r\n\r\nAlso helps to set the env var LOG_LEVEL=debug, so that the previous command produces more information.\n\n npepinpe: Triage:\n\nLet's discuss it in planning later and see if we have time for it, but we shouldn't postpone it too much to avoid missing out on dependency updates and losing momentum (since Rodrigo has worked on it recently).\n megglos: One hint: we also need to check how we can update go dependencies, we could keep dependabot for this for a first scope as well.\n rodrigo-lourenco-lopes: https://github.com/camunda/zeebe/pull/14909 is merged. The requirements from the dependabot were added to renovate and dependabot.yml removed.  \r\nNow we are going to be validating the next PRs that get created.\r\nIf all is correct then we still need to remove the \"Dependabot auto-merge updates\" workflow.\n oleschoenburg: @rodrigo-lourenco-lopes We are now getting maven dependency PRs from Renovate, which is great :rocket: \r\nBut the PR title and commit message is a bit wrong. https://github.com/camunda/zeebe/pull/14962 for example uses \"deps(deps)\" as the topic, it should be \"deps(maven)\". Could you fix this as a follow up? :pray: \n remcowesterhoud: @rodrigo-lourenco-lopes Thanks for doing this 🚀 As the PR is merged, are you okay with closing this issue?\r\n\r\nEither way I will remove it from the ZPA board cause we don't need to take any action here.\n rodrigo-lourenco-lopes: > @rodrigo-lourenco-lopes Thanks for doing this 🚀 As the PR is merged, are you okay with closing this issue?\r\n> \r\n> Either way I will remove it from the ZPA board cause we don't need to take any action here.\r\n\r\n@remcowesterhoud we still need to remove the dependabot github related actions, I will do this, and then close it.\n megglos: we might also remove this as part of the dependabot cleanup\r\nhttps://github.com/camunda/zeebe/blob/main/commitlint.config.js#L6C5-L7C71",
    "title": "Replace Dependabot with Renovate"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15220",
    "component": "Zeebe",
    "subcomponent": "Broker",
    "context": "Bug Fixes",
    "gitHubText": "In the `ClusterTopologyManager`, the `onGoingTopologyChangeOperation`flag  is only set back to `false` when an operation is applied.\r\nIt's not set to `false` if a change is cancelled or if an operation fails to initialize.\r\nIf there are new operations later, the manager will not start them because `onGoingTopologyChangeOperation` is still set to `true`.\r\n\r\nRelates to #13642 \n",
    "title": "Failed or cancelled topology change operations block further operations"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15219",
    "component": "Zeebe",
    "subcomponent": "Broker",
    "context": "Bug Fixes",
    "gitHubText": "A broker can receive a new topology over gossip before the `TopologyInitializer` finished. At that point, the local topology is uninitialized and the received topology is persisted without merging.\r\nThis can result in a broker forgetting about already applied operations, something that we usually avoid by always persisting the local topology when changes are applied.\r\n\r\nNormally, topology updates received via gossip should not overwrite an uninitialized topology. The only exception to this would be the `GossipInitializer`.\r\n\r\nRelates to #13642 \n",
    "title": "Topology received via gossip can bypass merge with locally persisted topology"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14509",
    "component": "Zeebe",
    "subcomponent": "Broker",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\nAfter restoring from backup, some partitions encountered [following error](https://console.cloud.google.com/logs/query;cursorTimestamp=2023-09-26T11:26:03.072149905Z;endTime=2023-09-26T11:56:36.088Z;pinnedLogId=2023-09-26T11:26:01.585896295Z%2Fh1uykcs15coafgsq;query=logName:%22stdout%22%0Aresource.type%3D%22k8s_container%22%0Aresource.labels.container_name%3D%22zeebe%22%0Aresource.labels.namespace_name%3D%22eab43606-a898-467f-967f-21a757fc69b7-zeebe%22%0Aresource.labels.location%3D%22europe-west1%22%0Aresource.labels.project_id%3D%22camunda-saas-int-chaos%22%0Aresource.labels.cluster_name%3D%22worker-chaos-1%22%0Aresource.labels.pod_name%3D%22zeebe-1%22%0AjsonPayload.context.partitionId%3D%2226%22%0Atimestamp%3D%222023-09-26T11:26:01.585896295Z%22%0AinsertId%3D%22h1uykcs15coafgsq%22;startTime=2023-09-26T10:56:36.088Z;summaryFields=jsonPayload%252Fcontext%252FpartitionId,resource%252Flabels%252Fpod_name:false:32:beginning?project=camunda-saas-int-chaos).\r\n\r\n```\r\njava.lang.IllegalStateException: Expected to delete index after 3982, but it is lower than the commit index 3983. Deleting committed entries can lead to inconsistencies and is prohibited.\r\n\tat io.atomix.raft.storage.log.RaftLog.deleteAfter(RaftLog.java:168) ~[zeebe-atomix-cluster-8.2.13.jar:8.2.13]\r\n\tat io.atomix.raft.roles.PassiveRole.tryToAppend(PassiveRole.java:565) ~[zeebe-atomix-cluster-8.2.13.jar:8.2.13]\r\n\tat io.atomix.raft.roles.PassiveRole.appendEntries(PassiveRole.java:511) ~[zeebe-atomix-cluster-8.2.13.jar:8.2.13]\r\n\tat io.atomix.raft.roles.PassiveRole.handleAppend(PassiveRole.java:367) ~[zeebe-atomix-cluster-8.2.13.jar:8.2.13]\r\n```\r\n\r\nWhat happened:\r\n\r\nFirst Zeebe-1 votes for Zeebe-2 and Zeebe-2 becomes leader.\r\n```\r\nINFO 2023-09-26T11:25:57.870482436Z [jsonPayload.context.partitionId: 26] [resource.labels.podName: zeebe-1] RaftServer{raft-partition-partition-26}{role=FOLLOWER} - Accepted PollRequest{term=0, candidate=2, lastLogIndex=3982, lastLogTerm=2}: candidate's log is up-to-date\r\nINFO 2023-09-26T11:25:57.887139637Z [jsonPayload.context.partitionId: 26] [resource.labels.podName: zeebe-1] RaftServer{raft-partition-partition-26}{role=FOLLOWER} - Accepted VoteRequest{term=1, candidate=2, lastLogIndex=3982, lastLogTerm=2}: candidate's log is up-to-date\r\nINFO 2023-09-26T11:25:57.892834402Z [jsonPayload.context.partitionId: 26] [resource.labels.podName: zeebe-1] RaftServer{raft-partition-partition-26} - Found leader 2\r\n```\r\nSee above. `term` is 1, but the lastLogTerm is 2. This is because after restore, raft metastore is empty. So it restarts the term from 1. This is ok so far. But after Zeebe-2 becomes the leader and commits its InitialEntry at index `3983`, Zeebe-0 starts election probably because it did not receive any heartbeat from the leader `Zeebe-2`.\r\n\r\n```\r\nINFO 2023-09-26T11:26:01.569385207Z [jsonPayload.context.partitionId: 26] [resource.labels.podName: zeebe-1] RaftServer{raft-partition-partition-26}{role=FOLLOWER} - Accepted PollRequest{term=1, candidate=0, lastLogIndex=3982, lastLogTerm=2}: candidate's log is up-to-date\r\nINFO 2023-09-26T11:26:01.577404370Z [jsonPayload.context.partitionId: 26] [resource.labels.podName: zeebe-1] RaftServer{raft-partition-partition-26}{role=FOLLOWER} - Accepted VoteRequest{term=2, candidate=0, lastLogIndex=3982, lastLogTerm=2}: candidate's log is up-to-date\r\nINFO 2023-09-26T11:26:01.582069421Z [jsonPayload.context.partitionId: 26] [resource.labels.podName: zeebe-1] RaftServer{raft-partition-partition-26} - Found leader 0\r\n```\r\nZeebe-1 accepts poll request from Zeebe-0 because Zeebe-0's lastLogTerm > Zeebe-1's current term 1. This leads to inconsistency. \r\n\r\n**Impact**\r\nIf it happens immediately after restore before writing any new data, it should be safe to restart the brokers. Due to the above error, the new leader Zeebe-0 cannot commit anything. So, as a result there won't be any actual data inconsistency. If we wait until all nodes are healthy before restarting the traffic to the cluster, this will not lead to any actual data inconsistency because no user requests has been processed yet. However, if there are new user data that has been processed, then there is a possibility for partial data loss. **Note that the data recovered from the backup won't be lost if this happens. Only new data will be affected.**\r\n\r\n**To Reproduce**\r\n\r\nFollowing scenario can lead to this error:\r\n1. A, B, C restored from the same backup, where the term of the last entry in the log is > 1\r\n2. A, B forms the quorum and A became the leader\r\n3. A and B committed new entries \r\n4. C does not know about the new leader. So it starts new election.\r\n\r\n**Expected behavior**\r\n\r\nAfter, restoring from a backup raft can continue working in all scenarios.\r\n\r\n**Environment:**\r\n- Zeebe Version: Observed in 8.2.13\r\n\r\nRelates to [https://jira.camunda.com/browse/SUPPORT-19174](https://jira.camunda.com/browse/SUPPORT-19174)\r\n\n\n nicpuppa: This affect also a SM customer ([support case](https://jira.camunda.com/browse/SUPPORT-19174)). In this case the problem was with `term`. Since it is reset, no new snapshots can be taken until the term increases to a higher value than the one before the backup. As a result, logs are not compacted and disk usage grows high.\r\n\r\nFixed by this [PR](https://github.com/camunda/zeebe/pull/15272)",
    "title": "Potential inconsistency in raft after restoring from a backup"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15445",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Description**\r\n\r\nFEEL 1.17.3 resolves the issue related to [escaping special characters](https://github.com/camunda/feel-scala/issues/701). On Zeebe side we should verify that special characters inside input mappings are not escaped anymore.\r\n\r\n\r\n\r\n\n",
    "title": "Verify correct behaviour of input mappings after bump to FEEL 1.17.3"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15381",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "While testing the impact of pod restarts during dynamic scaling, we observed the following error and partition join was stuck. \r\n```\r\njava.lang.NullPointerException: Cannot invoke \"io.atomix.raft.storage.system.Configuration.index()\" because the return value of \"io.atomix.raft.cluster.impl.RaftClusterContext.getConfiguration()\" is null\r\n\tat io.atomix.raft.impl.RaftContext.setCommitIndex(RaftContext.java:503) ~[zeebe-atomix-cluster-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat io.atomix.raft.roles.PassiveRole.appendEntries(PassiveRole.java:588) ~[zeebe-atomix-cluster-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat io.atomix.raft.roles.PassiveRole.handleAppend(PassiveRole.java:426) ~[zeebe-atomix-cluster-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat io.atomix.raft.roles.PassiveRole.onAppend(PassiveRole.java:349) ~[zeebe-atomix-cluster-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat io.atomix.raft.impl.RaftContext.lambda$registerHandlers$19(RaftContext.java:323) ~[zeebe-atomix-cluster-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat io.atomix.raft.impl.RaftContext.lambda$runOnContext$26(RaftContext.java:334) ~[zeebe-atomix-cluster-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat io.atomix.utils.concurrent.SingleThreadContext$WrappedRunnable.run(SingleThreadContext.java:178) ~[zeebe-atomix-utils-8.4.0-SNAPSHOT.jar:8.4.0-SNAPSHOT]\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:?]\r\n\tat java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[?:?]\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:?]\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:?]\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:?]\r\n\tat java.base/java.lang.Thread.run(Unknown Source) [?:?]\r\n```\r\nWorkaround: restart both the leader and the restarted pod.\r\n\r\nInitial root cause analysis\r\n\r\n- Server B sends join request to the leader\r\n- Leader commits the configuration in the existing members\r\n- Server B receives the configuration, but did not receive the commit information => configuration is kept in memory\r\n- Server B restarts (pod was restarted)\r\n- Server B retries join request => noop because previous join has already completed\r\n- Leader does not sent the configuration again, because Leader assumes Server B already has it. When it sends the Append request, it results in null pointer exception.\r\n\r\nThis was not a problem before because all servers always started with the static configuration.\r\n\r\nProposed fixes\r\n1. Quick fix: Leader should sent the configuration again when it receives a duplicate join request. Handle null pointer exception in the follower, by simply rejecting the AppendRequest. Eventually the follower should receive the new configuration.\r\n2. Probably a better fix: Include the `configurationIndex` in the `AppendResponse` so that the leader can re-send the configuration if required. \n",
    "title": "NullPointerException when join is retried after a restart"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15343",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Summary**\r\n\r\n> Try to answer the following as best as possible\r\n\r\n- How often does the test fail? several times \r\n- Does it block your work? It stopped me from merging some changes\r\n- Do we suspect that it is a real failure? 🤷 \r\n\r\n**Failures**\r\n\r\n> Outline known failure cases, e.g. a failed assertion and its stacktrace obtained from Jenkins\r\n\r\n<details><summary>GitHub Error</summary>\r\n<pre>\r\nThe operation was canceled.\r\n</pre>\r\n</details>\r\n\r\n**Hypotheses**\r\n\r\n> List any hypotheses if you have one; can be ommitted\r\n\r\n**Logs**\r\n\r\n> If possible, provide more context here, e.g. standard output logs, link to build, etc.\r\n\r\n[io.camunda.zeebe.it.clustering.dynamic.ScaleResiliencyTest$ScaleDown-1-output.txt](https://github.com/camunda/zeebe/files/13451838/io.camunda.zeebe.it.clustering.dynamic.ScaleResiliencyTest.ScaleDown-1-output.txt)\r\n\r\n**Additional**\r\n\r\nI was able to find out which test was still running thanks to @deepthidevaki's awesome script:\r\n\r\n```sh\r\ngrep \"Running io.\" test.out > running.out\r\n\r\ngrep \"Tests run:.*\" test.out | grep \"io.\" > testsRan.out\r\ncut -d' ' -f3 running.out > testsRunning.out\r\ncut -d'-' -f3 testsRan.out | cut -d' ' -f3 > testsRanClasses.out\r\n\r\ngrep -vf  testsRanClasses.out testsRunning.out \r\n```\r\n\n\n deepthidevaki: Observations from the log:\r\n\r\nBroker-2 has attempted to leave partition 2, but could not succeed because Broker-1 is not available. But it has already committed that first part of the joint consensus. When Broker-1 is restarted, in some cases partition 2 in Broker-2 is not yet started. In this case, Broker-0 which is the leader might commit the second part of joint consensus before Broker-2 is ready. When this happens, Broker-2 waits forever to become partition-2 to be ready. \r\n\r\n```\r\n15:02:25.031 [Broker-0] [raft-server-2] [raft-server-0-2] DEBUG io.atomix.raft.roles.CandidateRole - RaftServer{raft-partition-partition-2}{role=CANDIDATE} - Cancelling election\r\n15:02:25.032 [Broker-0] [raft-server-2] [raft-server-0-2] INFO  io.atomix.raft.impl.RaftContext - RaftServer{raft-partition-partition-2} - Found leader 0\r\n15:02:25.032 [Broker-0] [raft-server-2] [raft-server-0-2] DEBUG io.atomix.raft.roles.LeaderAppender - RaftServer{raft-partition-partition-2} - Configuring 2\r\n15:02:25.032 [Broker-0] [raft-server-2] [raft-server-0-2] DEBUG io.atomix.raft.roles.LeaderAppender - RaftServer{raft-partition-partition-2} - Configuring 1\r\n15:02:25.034 [Broker-2] [raft-server-2] [raft-server-2-2] INFO  io.atomix.raft.impl.RaftContext - RaftServer{raft-partition-partition-2} - Found leader 0\r\n```\r\nHere leader is configuring both 1 and 2 with the first part of joint consensus which was already committed before the restart of broker-2.\r\n```\r\n15:02:25.035 [Broker-1] [raft-server-2] [raft-server-1-2] DEBUG io.atomix.raft.roles.FollowerRole - RaftServer{raft-partition-partition-2}{role=FOLLOWER} - Rejected InternalAppendRequest[term=3, leader=0, prevLogIndex=5, prevLogTerm=2, commitIndex=4, entries=[]]: Previous index (5) is greater than the local log's last index (3)\r\n15:02:25.035 [Broker-0] [raft-server-2] [raft-server-0-2] DEBUG io.atomix.raft.roles.LeaderAppender - RaftServer{raft-partition-partition-2} - Configuring 1\r\n```\r\nHere, Broker-0 configures Broker 1 with second part of joint consensus where Broker-2 is not part of the configuration anymore.\r\n```\r\n15:02:25.037 [Broker-1] [raft-server-2] [raft-server-1-2] INFO  io.atomix.raft.impl.RaftContext - RaftServer{raft-partition-partition-2} - Setting firstCommitIndex to 4. RaftServer is ready only after it has committed events upto this index\r\n15:02:25.037 [Broker-1] [raft-server-2] [raft-server-1-2] INFO  io.atomix.raft.impl.RaftContext - RaftServer{raft-partition-partition-2} - Commit index is 4. RaftServer is ready\r\n15:02:25.037 [Broker-1] [raft-server-2] [raft-server-1-2] DEBUG io.atomix.raft.impl.DefaultRaftServer - RaftServer{raft-partition-partition-2} - Server started successfully!\r\n15:02:25.037 [Broker-1] [raft-server-2] [raft-server-1-2] INFO  io.atomix.raft.partition.impl.RaftPartitionServer - RaftPartitionServer{raft-partition-partition-2} - Server successfully bootstrapped partition PartitionId{id=2, group=raft-partition} in 4096ms\r\n```\r\nBroker-2 has already left the configuration, So it never becomes READY. As a result `startFuture` in Partition's StartupProcess is never completed.\r\n```\r\n15:02:32.091 [Broker-2] [Startup] [zb-actors-0] INFO  io.camunda.zeebe.broker.partitioning.PartitionManagerImpl - Leaving partition 2\r\n15:02:32.094 [Broker-2] [Startup] [zb-actors-1] DEBUG io.camunda.zeebe.broker.partitioning.Partition - Shutdown was called with context: PartitionStartupContext{partition=2}\r\n```\r\nLeave completes successfully, as it has already left the configuration. So it tries to shutdown. But [shutdown is blocked because it is waiting on the `startupFuture`](https://github.com/camunda/zeebe/blob/b10310596bc38b644d062786efca505d8c51c8fd/scheduler/src/main/java/io/camunda/zeebe/scheduler/startup/StartupProcess.java#L198). \r\n```\r\n15:04:20.968 [Broker-2] [Startup] [zb-actors-0] DEBUG io.camunda.zeebe.broker.partitioning.Partition - Shutdown was called with context: PartitionStartupContext{partition=2}\r\n15:04:20.968 [Broker-2] [Startup] [zb-actors-0] INFO  io.camunda.zeebe.broker.partitioning.Partition - Shutdown already in progress\r\n```\r\nAfter the test fails, when it tries to shutdown the broker, we see that the shutdown of partition 2 is already in progress. Test is stuck waiting in the shutdown leading to the timeout of CI job.\r\n\r\nThe test passes when Broker-2 becomes ready before Broker-1 is up. ",
    "title": "IT timeout due to `ScaleResiliencyTest.ScaleDown`"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15194",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "This could cause problem in `replay` mode, Form events will be missed and not added to the state.\n\n korthout: I've quickly verified the issue, and this can lead to the loss of the deployed Forms on 8.3 and 8.4.0-alpha1.\r\n\r\nIn that case, existing jobs of User Tasks may still be referring to the key of that form, but it no longer exists in Zeebe. \r\n\r\nWhen instances activate User Task with form id set after the replay missed the Form events, an Incident is raised at the User Task:\r\n```\r\nE PI       ACTIVATING     - #34->#21 K14 - USER_TASK \"task\" in <process \"PROCESS\"[K10]>\r\nE INCIDENT CREATED        - #35->#21 K15 - FORM_NOT_FOUND Expected to find a form with id 'Form_0w7r08e', but no form with this id is found, at least a form with this id should be available. To resolve the Incident please deploy a form with the same id,  @\"task\"[K14] in <process \"PROCESS\"[K10]>\r\n```\n korthout: In short: **The impact is a potential loss of deployed form**. \r\n\r\nWhen that happens, the user will notice because newly activated User Tasks will raise an Incident that the Form cannot be found.\r\n\r\nUser must redeploy the form to fix the problem, but the bug can re-occur afterward until we have a fix.\n korthout: Marking it as sev high because users can recover easily. Loss of data is very limited. And chance of occurrence is low. A fix is on the way though.",
    "title": "Form events are not replayed"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15188",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nA leader update on a partition wasn't successful.\r\n\r\nNo further details could be seen from the log.\r\n\r\n**To Reproduce**\r\n\r\n<!--\r\nSteps to reproduce the behavior\r\n\r\nIf possible add a minimal reproducer code sample\r\n- when using the Java client: https://github.com/zeebe-io/zeebe-test-template-java\r\n\r\n-->\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nA partition leader is successfully updated.\r\n\r\n**Log/Stacktrace**\r\n\r\n<!-- If possible add the full stacktrace or Zeebe log which contains the issue. -->\r\n\r\n* [GCP log](https://console.cloud.google.com/logs/query;query=logName:%22stdout%22%0Aresource.type%3D%22k8s_container%22%0Aresource.labels.cluster_name%3D%22worker-chaos-1%22%0Aresource.labels.location%3D%22europe-west1%22%0Aresource.labels.container_name%3D%22zeebe%22%0Aresource.labels.project_id%3D%22camunda-saas-int-chaos%22%0Aresource.labels.namespace_name%3D%2207ed94ef-cfa9-445f-b755-37d1e5c8f2ea-zeebe%22%0Aresource.labels.pod_name%3D%22zeebe-2%22;pinnedLogId=2023-11-13T17:12:02.726497982Z%2Fuwqxje0gquvak55g;cursorTimestamp=2023-11-13T17:12:35.079051138Z;startTime=2023-11-13T16:42:32.726Z;endTime=2023-11-13T17:42:32.726Z?project=camunda-saas-int-chaos) / [downloaded logs](https://drive.google.com/file/d/1SUX9Nb4LMKVs0CV3akvbcxH3hG-j0vxw/view?usp=sharing)\r\n\r\n```\r\nCould not update new leader for partition X at term Y. Expected to have a non-null value for current leader term, but found null\r\n```\r\n\r\n**Environment:**\r\n- OS: <!-- [e.g. Linux] --> Linux (SaaS Int - chaos)\r\n- Zeebe Version: <!-- [e.g. 0.20.0] --> `8.4.0-alpha1`\r\n- Configuration: <!-- [e.g. exporters etc.] -->\r\n\n\n npepinpe: Triage:\n\nWe're having some difficulty assigning a severity and priority to this without more details.\n\n- What was the impact on the cluster? \n- Did it cause any processing delays? \n- Was the cluster unavailable for a period of time? \n- Did it eventually recover? If so, after how long?\n\n deepthidevaki: I will look into it, as I observed it in a qa test.",
    "title": "Could not update new leader for partition"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15047",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\nThis error happened on Sat 03/11:\r\n\r\n```\r\n\"StreamProcessor-1 failed, marking it as dead: StreamProcessor-1{status=DEAD, issue=HealthIssue[message=null, throwable=io.camunda.zeebe.util.exception.UnrecoverableException: Authorization data unavailable: The Token can't be used before 2023-11-03T14:46:52Z., cause=null]}\"\r\n```\r\n\r\nYou can find the logs [here](https://drive.google.com/drive/folders/1wJqLwgla0px44joF49Ve0bnW0WzZvtQC)\r\n\n\n megglos: ZDP-Triage:\r\n- JWT token validation must relates to multi-tenancy, would delegate this to ZPA\n korthout: ZPA triage:\r\n- marking it as high severity because it caused a DEAD partition\r\n- we should investigate and fix it soon\r\n- might make sense to work on this while multi-tenancy is fresh\r\n\r\n@koevskinikola I heard that you may already have some thoughts about this issue. Could you share them in a comment?\n koevskinikola: Related to a [SUPPORT case](https://jira.camunda.com/browse/SUPPORT-19112) as well.\n koevskinikola: My hypothesis is that this is a time zone issue.\r\n\r\n1. We're using `Instance.now()` to set the `JWT#issuedAt` (`iat`) claim [here](https://github.com/camunda/zeebe/blob/6a730a7bf57f0491cb0b29e5b2c90533330b6c1b/auth/src/main/java/io/camunda/zeebe/auth/impl/JwtAuthorizationEncoder.java#L66).\r\n2. The `Instance.now()` method provides an `Instant` from the system UTC clock.\r\n3. If the cluster is set on a different time zone, the JWT validation might throw an exception that `The Token can't be used before xxx`.\r\n\r\nI will try to confirm this with a test.\r\n\r\nProposed solutions:\r\n1. We use the `ActorClock` to set the time instead.\r\n2. We remove the `JWT.issuedAt` (`iat`) claim\r\n3. We remove the JWT validation when decoding the JWT token.\r\n\r\nDecision:\r\nWe will implement proposals 2 and 3 from above because:\r\n* We're only using the JWT token for data transport. The JWT token is not signed, and not used outside of Zeebe, so any data other than the authorization data isn't relevant. That means that the `issuedAt` claim can be removed.\r\n* Since the token isn't signed, validation isn't required. Coupled with the bad `issuedAt` implementation, it is causing bugs. It is better to disable the validation since existing Zeebe installations may already face the problem, and we want to disable the validation so that the issue doesn't pop up for existing JWT tokens.\r\n   * In that case, we will need to do our own validation that the `authorized_tenants` JWT claim is present. This can be done by doing a null-check when fetching the claim data since if the claim is not present, a `null` is returned.\r\n\r\ncc @korthout \r\n\n romansmirnov: @koevskinikola, just trying to understand the root cause of the issue, have you been able to validate your hypothesis? Isn't this \"just\" a clock syncing problem between the gateway node and broker node? By setting a leeway when verifying the token, would it help mitigate the issue?\r\n\r\nHowever, please consider this just a question to get a better understanding of the root cause. Meaning, I agree with the decision above to solve the problem anyway 😄 \n koevskinikola: Hey @romansmirnov ,\r\n\r\nI think you're right. It doesn't seem to be time-zone related, but just a matter of leeway.\r\n\r\nThat's because:\r\n1. The JWT library that we use (`java-jwt`) also uses `Instant.now()` inside the `Verifier` to get the current time to compare against.\r\n    * Since we're also using `Instant.now()` to set the `issuedAt` claim, this means the Verifier is always comparing UTC times.\r\n2. The `defaultLeeway` value in `java-jwt` is set to `0`. This means that verifying this token even half a second earlier will cause an issue (this seems to be the case in one of the occurences).\r\n\r\nSo we can definitely adjust the `leeway` to compensate. However, as I pointed out, we're not really signing the JWT token, so the `issuedAt` claim is irrelevant here.\r\n\r\nI would feel more confident in not verifying the `issuedAt` claim at all right now. If we ever decide to expose the JWT data to exported events, we can:\r\n1. Sign it first.\r\n2. Set and adjust the verification for the best-practice claims (like the `issuedAt`)\r\n\r\nUPDATE:\r\nI confirmed my hypothesis by:\r\n1. Providing a fixed clock with which I set the `issuedAt` claim on a JWT token.\r\n2. Create a JWT Verifier on which I set a fixed clock 1 second behing.\r\n\r\nThe result is that the JWT verification fails with the same message `The Token can't be used before...`/\n Zelldon: Happened in 8.4.0-alpha1 https://console.cloud.google.com/errors/detail/CI_Y0MHF3fmnggE;service=zeebe;time=P7D?project=zeebe-io but I suspect this fix was not part of the release.\n korthout: Nope 0d600f736e6c1c6cc69cda38d40c78dc4d5abfea is not part of `8.4.0-alpha1`.",
    "title": "8.3.x release benchmark - Authorization data unavailable: The Token can't be used before xxx"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14931",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen I deploy a form with the java client, the output of the `DeploymentEvent` doesn't print the form.\r\n\r\n**To Reproduce**\r\n\r\nrun\r\n```\r\nDeploymentEvent deployment = zeebeClient.newDeployResourceCommand().addResourceFromClasspath(\"input_1.form\").send().join();\r\nLOG.info(\"Deployed: {}\", deployment);\r\n```\r\nit prints\r\n```\r\nDeployed: DeploymentEventImpl{key=2251799813804733, processes=[], decisions=[], decisionRequirements=[], tenantId='<default>'}\r\n```\r\n\r\n\r\n<!--\r\nSteps to reproduce the behavior\r\n\r\nIf possible add a minimal reproducer code sample\r\n- when using the Java client: https://github.com/zeebe-io/zeebe-test-template-java\r\n\r\n-->\r\n\r\n**Expected behavior**\r\n\r\nThe output should contain the form as well.\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Environment:**\r\n- OS: Windows\r\n- Zeebe Version: 8.3.0\r\n- Configuration: <!-- [e.g. exporters etc.] -->\r\n\n\n remcowesterhoud: ZPA Triage:\r\n- Related Slack thread: https://camunda.slack.com/archives/CSQ2E3BT4/p1698767548209869\r\n- @berkaycanbc please have a look 👀 and do an individual triage\n nicpuppa: @berkaycanbc as seems a very easy fix, this should be completed before the next patch release in my opinion. What do you think ? ",
    "title": "A deployed form is not mentioned in the `DeploymentEventImpl.toString()`"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14924",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\nWhile this is not always the case, in CW44 (and new benchmarks), I've seen that some nodes sometimes end up doing up to 8000 IOPS, instead of the ~4000 from the previous benchmarks. \r\n\r\nNote that some nodes still do 4000, and this issue is intermittent. But it's unclear in our benchmarks why one node would do so much more IOPS. Leadership is well balanced, each partition is doing ~50 PI/s, the journal append rate is similar, the leader commit rate is similar, etc.\r\n\r\nYet somehow, one or more nodes is doing _way_ more I/O than the others.\r\n\r\n**Log/Stacktrace**\r\n\r\nHere's CW43 when one node is leader for 2 partitions:\r\n\r\n![image](https://github.com/camunda/zeebe/assets/43373/0e2450e1-747d-44f2-89fd-fbe9232c943a)\r\n\r\nHere's CW43 when leadership is well balanced:\r\n\r\n![image](https://github.com/camunda/zeebe/assets/43373/446f502a-9dc8-4afc-90ce-8c0127d6d04d)\r\n\r\nNow, it's still weird that one node is doing way less I/O than the others, but we're still at the 4000 mark.\r\n\r\nHere's CW44 with leadership well balanced: \r\n\r\n![image](https://github.com/camunda/zeebe/assets/43373/1f6d1c99-cf5c-4279-afd1-1317b6466ac3)\r\n\n\n Zelldon: Triage:\n\nWe should take a look asap and asses the current state/issue.\n npepinpe: Timebox root causing in the next 2 weeks. First check CW45, if doesn't happen then we can consider it a fluke and close. Otherwise root cause, and put it back into planning to discuss priority on the fix.\n oleschoenburg: I just stumbled over this again and I think it's likely that we are counting some metrics twice.\r\n\r\nJust querying for the raw data shows two almost identical entries for zeebe-0 writing to /dev/sdb.\r\n\r\n```promql\r\nrate(container_fs_writes_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])\r\n```\r\n\r\n```js\r\n{container=\"zeebe\", device=\"/dev/sdb\", endpoint=\"https-metrics\", id=\"/kubepods/burstable/podb8b5b883-fb5f-4da2-933a-7cb778cd3a91/d2ef05d2d8f8442992842479db4d7b2558106a1c53d44c1fac69b76865be8a67\", image=\"gcr.io/zeebe-io/zeebe:medic-y-2023-cw-45-322236a-benchmark-322236a\", instance=\"10.132.0.158:10250\", job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", name=\"d2ef05d2d8f8442992842479db4d7b2558106a1c53d44c1fac69b76865be8a67\", namespace=\"medic-y-2023-cw-45-322236a-benchmark\", node=\"gke-zeebe-cluster-n2-standard-2-d2e6c783-rw8j\", pod=\"medic-y-2023-cw-45-322236a-benchmark-zeebe-0\", service=\"monitoring-kube-prometheus-kubelet\"}\r\n{device=\"/dev/sdb\", endpoint=\"https-metrics\", id=\"/kubepods/burstable/podb8b5b883-fb5f-4da2-933a-7cb778cd3a91\", instance=\"10.132.0.158:10250\", job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", namespace=\"medic-y-2023-cw-45-322236a-benchmark\", node=\"gke-zeebe-cluster-n2-standard-2-d2e6c783-rw8j\", pod=\"medic-y-2023-cw-45-322236a-benchmark-zeebe-0\", service=\"monitoring-kube-prometheus-kubelet\"}\r\n```\n Zelldon: ![iops](https://github.com/camunda/zeebe/assets/2758593/79d970ab-7757-47e5-a127-b3c5c0f56c8b)\r\n\r\nIt is the same what we had with the CPU a while ago\r\n\r\n\r\nhttps://github.com/camunda/zeebe/pull/13386\n Zelldon: It seems to be even quadrupled. \r\n\r\nWe have two different containers empty and zeebe AND two services: monitoring and metrics.\r\n![iops](https://github.com/camunda/zeebe/assets/2758593/ea5fad0a-2ba8-495b-b16d-283ac2aaf588)\r\n\r\n\r\n",
    "title": "IOPS doubled in CW44"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14884",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\nThe brokers currently naively request that all members restart their streams whenever a new member is added. This causes some noise since obviously the other brokers aren't handling such messages. \r\n\r\nFurther, we don't retry failures, so we could still have streams that are not known on the brokers.\r\n\r\n**Expected behavior**\r\n\r\n- We only request stream restart from gateways.\r\n- We retry (with back off) until the request is successful.\r\n\n",
    "title": "Improve resilience of remote stream restart"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14814",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "On a Zeebe 8.2.12 Cluster we observed the following load. This does not resolve itself and the load remains constant.\r\n\r\n```\r\nCOMMAND PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998138010331 \r\nCOMMAND PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998139003162 \r\nCOMMAND PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998140261067 \r\nCOMMAND PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998142789239 \r\n...\r\nCOMMAND_REJECTION PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998138010331 \r\nCOMMAND MESSAGE_SUBSCRIPTION REJECT 22517998138010331 \r\nCOMMAND_REJECTION MESSAGE_SUBSCRIPTION REJECT 22517998138010331 \r\nCOMMAND_REJECTION PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998139003162 \r\nCOMMAND MESSAGE_SUBSCRIPTION REJECT 22517998139003162 \r\nCOMMAND_REJECTION MESSAGE_SUBSCRIPTION REJECT 22517998139003162 \r\nCOMMAND_REJECTION PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998140261067 \r\nCOMMAND MESSAGE_SUBSCRIPTION REJECT 22517998140261067 \r\nCOMMAND_REJECTION MESSAGE_SUBSCRIPTION REJECT 22517998140261067 \r\nCOMMAND_REJECTION PROCESS_MESSAGE_SUBSCRIPTION CORRELATE 22517998142789239 \r\nCOMMAND MESSAGE_SUBSCRIPTION REJECT 22517998142789239 \r\nCOMMAND_REJECTION MESSAGE_SUBSCRIPTION REJECT 22517998142789239 \r\n```\r\n\r\nThe `PendingMessageSubscriptionChecker` writes `PROCESS_MESSAGE_SUBSCRIPTION/CORRELATE` commands for entries in `MutablePendingMessageSubscriptionState`. While processing these commands, the `ProcessMessageSubscriptionCorrelateProcessor` doesn't find a matching subscription and writes a `COMMAND_REJECTION` and a `MESSAGE_SUBSCRIPTION/REJECT` command. The `MessageSubscriptionRejectProcessor` _also_ rejects the `MESSAGE_SUBSCRIPTION/REJECT` command by writing a `COMMAND_REJECTION` because it does not find a matching correlation in the message state.\r\n\r\nThe `PROCESS_MESSAGE_SUBSCRIPTION/CORRELATE` is rejected with cause `NOT_FOUND` and a matching message: \"Expected to correlate process message subscription with element key '22517998206768899' and message name 'MY_MESSAGE_NAME', but no such subscription was found\".\r\nThe `MESSAGE_SUBSCRIPTION/REJECT` is rejected with cause `INVALID_STATE` and message \"Expected message '112589990754201722' to be correlated for process with BPMN process id 'MY_PROCESS_ID' but no correlation was found\"\r\n\r\n## Cause\r\n\r\nOn one partition we have the subscription column family containing a subscription with `correlating=true` so the `PROCESS_MESSAGE_SUBSCRIPTION/CORRELATE` is sent again and again. On the other partition, the subscription column family does not contain such an entry.\r\nHypothesis: A `MESSAGE_SUBSCRIPTION/CORRELATE` or  `MESSAGE_SUBSCRIPTION/DELETE`command was lost, leaking the subscription entry. `ProcessMessageSubscriptionCorrelateProcessor` handles non interrupting subscriptions by removing them from the state immediately and then sending `MESSAGE_SUBSCRIPTION/CORRELATE` just once. If that command is lost, nothing will resend it. The other partition keeps the partition in the state, tries to correlate again and again but only gets rejections because the receiving partition doesn't know about the subscription anymore.\r\n \r\n## Related Notes\r\n\r\n- It probably doesn't make sense to reject a `MESSAGE_SUBSCRIPTION/REJECT` command, can't we just clean up the subscription when the receiving partition rejected it?\r\n- Why write `COMMAND_REJECTION`s for internal commands not sent by a user anyway? Especially since the rejection is already described with a `MESSAGE_SUBSCRIPTION/REJECT` command.\r\n- To fully fix this, we need to find a way to recover from this broken state, not just prevent it from happening again.\r\n\r\nrelates to https://jira.camunda.com/browse/SUPPORT-19189\n\n oleschoenburg: Actually a duplicate of https://github.com/camunda/zeebe/issues/5750 (thanks to @saig0 for finding it!) but let's keep this one open because it contains some more information on how a partition can get into this state\n remcowesterhoud: ZPA Triage:\r\n- As there is already a PR open for this I've put it in our iteration and in review so it's visible.\r\n- The PR is in draft, I've asked @oleschoenburg for clarification on the status of the PR.",
    "title": "Leaked message subscriptions cause constant processing load"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14699",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nDuring startup of the broker Zeebe encounters snapshot 0. Likely an indication of some corruption.\r\n\r\nWe encountered this before on prod. The solution was to delete the partition data and restart the broker. After this the broker recovers. When we first found it https://github.com/camunda/zeebe/issues/14486 was created. This was released in 8.3.0. However, today it occurred again on 8.3.0. \r\n\r\n**To Reproduce**\r\n\r\n<!--\r\nSteps to reproduce the behavior\r\n\r\nIf possible add a minimal reproducer code sample\r\n- when using the Java client: https://github.com/zeebe-io/zeebe-test-template-java\r\n\r\n-->\r\nUnclear, but it's probably hard to do as you'd need to introduce some corruption.\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nIt is handled more gracefully and doesn't prevent the broker from reaching a bootloop.\r\n\r\n**Log/Stacktrace**\r\n\r\n<!-- If possible add the full stacktrace or Zeebe log which contains the issue. -->\r\n\r\n<details><summary>Full Stacktrace</summary>\r\n <p>\r\n\r\n```\r\njava.lang.IllegalStateException: In partition 1 expected to find a snapshot at index >= log's first index 30443521, but found snapshot 0. A previous snapshot is most likely corrupted.\r\nat io.atomix.raft.utils.StateUtil.verifySnapshotLogConsistent ( io/atomix.raft.utils/StateUtil.java:33 )\r\nat io.atomix.raft.impl.RaftContext.<init> ( io/atomix.raft.impl/RaftContext.java:223 )\r\nat io.atomix.raft.impl.DefaultRaftServer$Builder.build ( io/atomix.raft.impl/DefaultRaftServer.java:242 )\r\nat io.atomix.raft.impl.DefaultRaftServer$Builder.build ( io/atomix.raft.impl/DefaultRaftServer.java:216 )\r\nat io.atomix.raft.partition.impl.RaftPartitionServer.buildServer ( io/atomix.raft.partition.impl/RaftPartitionServer.java:159 )\r\nat io.atomix.raft.partition.impl.RaftPartitionServer.<init> ( io/atomix.raft.partition.impl/RaftPartitionServer.java:91 )\r\nat io.atomix.raft.partition.RaftPartition.createServer ( io/atomix.raft.partition/RaftPartition.java:127 )\r\nat io.atomix.raft.partition.RaftPartition.initServer ( io/atomix.raft.partition/RaftPartition.java:110 )\r\nat io.atomix.raft.partition.RaftPartition.bootstrap ( io/atomix.raft.partition/RaftPartition.java:94 )\r\nat io.camunda.zeebe.broker.partitioning.startup.steps.RaftBootstrapStep.startup ( io/camunda.zeebe.broker.partitioning.startup.steps/RaftBootstrapStep.java:31 )\r\nat io.camunda.zeebe.broker.partitioning.startup.steps.RaftBootstrapStep.startup ( io/camunda.zeebe.broker.partitioning.startup.steps/RaftBootstrapStep.java:14 )\r\nat io.camunda.zeebe.scheduler.startup.StartupProcess.proceedWithStartupSynchronized ( io/camunda.zeebe.scheduler.startup/StartupProcess.java:161 )\r\nat io.camunda.zeebe.scheduler.startup.StartupProcess.lambda$proceedWithStartupSynchronized$3 ( io/camunda.zeebe.scheduler.startup/StartupProcess.java:169 )\r\nat io.camunda.zeebe.scheduler.future.FutureContinuationRunnable.run ( io/camunda.zeebe.scheduler.future/FutureContinuationRunnable.java:28 )\r\nat io.camunda.zeebe.scheduler.ActorJob.invoke ( io/camunda.zeebe.scheduler/ActorJob.java:94 )\r\nat io.camunda.zeebe.scheduler.ActorJob.execute ( io/camunda.zeebe.scheduler/ActorJob.java:45 )\r\nat io.camunda.zeebe.scheduler.ActorTask.execute ( io/camunda.zeebe.scheduler/ActorTask.java:119 )\r\nat io.camunda.zeebe.scheduler.ActorThread.executeCurrentTask ( io/camunda.zeebe.scheduler/ActorThread.java:130 )\r\nat io.camunda.zeebe.scheduler.ActorThread.doWork ( io/camunda.zeebe.scheduler/ActorThread.java:108 )\r\nat io.camunda.zeebe.scheduler.ActorThread.run ( io/camunda.zeebe.scheduler/ActorThread.java:227 )\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n**Environment:**\r\n- OS: SaaS\r\n- Zeebe Version: 8.3.0\r\n\r\nhttps://console.cloud.google.com/logs/query;query=logName:%22stdout%22%0Aresource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22camunda-saas-int-chaos%22%0Aresource.labels.namespace_name%3D%22f2275ddc-b3a0-44b4-bc8a-cdfc242514f1-zeebe%22%0Aresource.labels.location%3D%22europe-west1%22%0Aresource.labels.cluster_name%3D%22worker-chaos-1%22%0Aresource.labels.container_name%3D%22zeebe%22%0Aresource.labels.pod_name%3D%22zeebe-0%22;pinnedLogId=2023-10-12T12:31:31.413159098Z%2Fa7opurgfpm3zpxtj;cursorTimestamp=2023-10-12T12:53:35.349727194Z;duration=PT3H?project=camunda-saas-int-chaos\r\n\n\n oleschoenburg: Since this is not fixed by https://github.com/camunda/zeebe/issues/14486 we need to investigate this!\n npepinpe: Did anyone check what was on disk? Did we save the \"corrupted\" snapshot? Or is 0 assumed to mean there is no snapshot?\n deepthidevaki: related #14594 \n rodrigo-lourenco-lopes: This issue also happened again in a trial cluster also with the 8.3.0 version. [Alert](https://camunda.slack.com/archives/C04D5HLFP24/p1697503341553379), [Logs](https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22camunda-cloud-240911%22%0Aresource.labels.location%3D%22us-central1%22%0Aresource.labels.cluster_name%3D%22prod-worker-3%22%0Aresource.labels.namespace_name%3D%2236891658-b31b-4efa-bbbc-7dbef6acec10-zeebe%22%0Aresource.labels.pod_name%3D%22zeebe-2%22%0Aresource.labels.container_name%3D%22zeebe%22%0A;pinnedLogId=2023-10-17T06:45:28.130308499Z%2Fldkhiotcmp0x0y7s;cursorTimestamp=2023-10-17T06:45:28.213227478Z;duration=PT12H?project=camunda-cloud-240911).\n Zelldon: Happened again.\r\n\r\nWas not able to connect to the failing pod (with debug container I had not access to the filesystem) had to delete the PVC and pod:\r\n\r\n```\r\n  k delete pvc data-zeebe-2 & k delete pod zeebe-2\r\n```\n npepinpe: Thinking out loud...\r\n\r\nImmediate hypothesis: the broker was shutdown right before this happened, without apparent error (so graceful shutdown).\r\n\r\nWe already have a regression where we delete pending snapshots concurrently, outside of the snapshot store actor. What if we had been persisting the snapshot (on the actor) while the Raft partition was shutting down (thus deleting pending snapshots on the Raft thread)?\r\n\r\nHm, I don't think that's possible actually, since the Raft thread waits for the persist operation to finish before doing anything else...\r\n\r\nSo the changes we did to snapshot:\r\n\r\n- No integrity check after the move - if the move is not done completely, then the snapshot may be corrupted.\r\n- However, we only write the checksum file once the move is done, so if the node crashed during the move we would have no checksum file and would not consider the snapshot persisted.\r\n\r\n\n npepinpe: It's currently happening on a cluster, so I had a chance to look at the data. I've uploaded the partition's snapshot directory here:\r\n\r\nhttps://drive.google.com/file/d/10cMGw7QPepM5euTNl3tWfuaLHVnuQ5YI/view?usp=share_link\r\n\r\nThe snapshot itself looks fine. But we can see the checksum file is completely empty :scream: \n npepinpe: Hm, this happened right after this bug: https://github.com/camunda/zeebe/issues/14776\r\n\r\nI wonder if it's not related. We open the checksum file, but crash before we can write. The file now exists, but it's empty.\r\n\r\nOops.\n npepinpe: And also `FileOutputStream#flush` does nothing :tada: ",
    "title": "IllegalStateException: found snapshot 0. A previous snapshot is most likely corrupted"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/14458",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\nNPE while the healthcheck service was trying to query the health of a Zeebe partition during shutdown.\r\n\r\n**To Reproduce**\r\n\r\nOccurs sometimes during shutdown.\r\n\r\n**Expected behavior**\r\n\r\nNo NPE.\r\n\r\n**Log/Stacktrace**\r\n\r\n<!-- If possible add the full stacktrace or Zeebe log which contains the issue. -->\r\n\r\n<details><summary>Full Stacktrace</summary>\r\n <p>\r\n\r\n```\r\n java.lang.NullPointerException: Cannot invoke \"io.camunda.zeebe.broker.system.partitions.PartitionContext.getComponentHealthMonitor()\" because \"this.context\" is null\r\n\tat io.camunda.zeebe.broker.system.partitions.ZeebePartition.getHealthReport(ZeebePartition.java:410) ~[zeebe-broker-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.health.CriticalComponentsHealthMonitor.getHealth(CriticalComponentsHealthMonitor.java:152) ~[zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.health.CriticalComponentsHealthMonitor.lambda$updateHealth$5(CriticalComponentsHealthMonitor.java:105) ~[zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat java.util.HashMap$KeySet.forEach(Unknown Source) ~[?:?]\r\n\tat io.camunda.zeebe.scheduler.health.CriticalComponentsHealthMonitor.updateHealth(CriticalComponentsHealthMonitor.java:105) ~[zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.ActorJob.invoke(ActorJob.java:94) ~[zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.ActorJob.execute(ActorJob.java:45) [zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.ActorTask.execute(ActorTask.java:119) [zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.ActorThread.executeCurrentTask(ActorThread.java:130) [zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.ActorThread.doWork(ActorThread.java:108) [zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT]\r\n\tat io.camunda.zeebe.scheduler.ActorThread.run(ActorThread.java:227) [zeebe-scheduler-8.3.0-SNAPSHOT.jar:8.3.0-SNAPSHOT] \r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n**Environment:**\r\n- Zeebe Version: zeebe:8.3.0-SNAPSHOT-cw-39-706f1b0\r\n- Error group: https://console.cloud.google.com/errors/detail/CKyTiNSSr_HjHw;service=zeebe;time=P7D?project=camunda-cloud-240911\r\n\n\n megglos: ZDP-Triage:\n- noise during shutdown\n- easy fix though - e.g. check for null and return unhealthy in this case\n Aniket-kumar404: I would like to work on this issue.\n rodrigo-lourenco-lopes: This issue happened again in the medic benchmark: [zeebe:medic-y-2023-cw-38-be24882-benchmark](https://console.cloud.google.com/errors/detail/CKyTiNSSr_HjHw;service=zeebe;version=medic-y-2023-cw-38-be24882-benchmark;time=P7D?project=zeebe-io)\r\n\r\nError group: https://console.cloud.google.com/errors/detail/CKyTiNSSr_HjHw%3Bservice=zeebe%3Btime=P7D?project=zeebe-io\r\n\r\n",
    "title": " NullPointerException: Cannot invoke `PartitionContext.getComponentHealthMonitor()` because `this.context` is null "
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/13870",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "<!--\r\nIn case you have questions about our software we encourage everyone to participate in our community via the\r\n- Camunda Platform community forum https://forum.camunda.io/ or \r\n- Slack https://camunda-cloud.slack.com/ (For invite: https://camunda-slack-invite.herokuapp.com/)\r\n\r\nThere you can exchange ideas with other Zeebe and Camunda Platform 8 users, as well as the product developers, and use the search to find answer to similar questions.\r\n\r\nThis issue template is used by the Zeebe engineers to create general tasks.\r\n-->\r\n\r\n**Description**\r\n\r\nThe workflow engine employs the help of several scheduled tasks that periodically append commands to the log stream. This helps offload time-consuming work that could otherwise block the actual workflow processing. \r\n\r\nFor example, job deadlines are checked for expiration by the `JobTimeoutTrigger`, which will append commands for each job to time them out. The stream processor will then process this command asynchronously. Eventually, the job changes state to `TIMED_OUT` when the command is processed. \r\n\r\nIn the meantime, the `JobTimeoutTrigger` continues to check for expired job deadlines periodically. If the stream processor is blocked, it may happen that the `JobTimeoutTrigger` continues to append the same `Job:TIME_OUT` command. There is nothing that stops it from overloading the stream processor.\r\n\r\nIn fact, many of the scheduled tasks suffer from a similar problem.\r\n\r\n**Proposed solution**\r\n\r\nScheduled tasks need to keep a cache of recently appended commands (or something similar) that can be used to avoid appending the same command multiple times.\r\n\r\nThis should be available in a generic way, so all scheduled tasks can easily add support for this.\r\n\r\n**Incident**\r\n\r\nFollow up issue from incident: [INC-274: Streamprocessor lagging behind](https://docs.google.com/document/d/1l8CPBThWtPUxEpmwcoxeb_9pn1eRB2CPpHPiwEVoa3Q/edit#heading=h.hyf892uforsw)\r\n\r\nSupport: \r\n- https://jira.camunda.com/browse/SUPPORT-18291\r\n- https://jira.camunda.com/browse/SUPPORT-18997 \r\n\n\n korthout: Marking this as high impact, as it is a recurring pain. Resolving this would lower the load on clusters experiencing problems where timers, buffered messages, or job timeouts play a role. This would help in the investigation as well as ease recovery.\n abbasadel: I'm increasing the priority of this issue/feature to 'upcoming' since there is a support case waiting for it. \r\nStill, it is highly unlikely to be able to work on this before 8.4. However, we will update the issue once we plan to work on it.\n megglos: ZDP-Planning:\r\n- pushing into the inbox of ZPA to get an update on this as it relates to #14003\n korthout: The ZPA-team discussed this issue again and now considers this a bug. Originally, I felt it was a feature, as we have never supported many timers triggering at once (i.e., there's always a limit somewhere). However, the team feels that outages should not occur from existing features, irrespective of how they are used. Add to this that we don't have documentation about some artibrary limit to the number of timers. Lastly, users feel that this is a bug, and so should we.\r\n\r\nAs a bug, it may be easier to prioritize and release a fix for this as we can backport and patch previous versions.\n dddpaul: @korthout Hi!\r\n\r\nIs there any updates for this bug? I would be nice to have a due date )\n korthout: Hi @dddpaul, the team plans to spend time on this in our current iteration. There's a chance that we can fit a solution in the upcoming patch releases, but we cannot promise this.\n\nWe'll need to consider different solutions. For example, the proposed cache reduces the load on the system in most cases but will not remove the problem completely. Alternatively, ideas like #12560 could help but come with other downsides. The developer(s) working on this issue should consider whether caching is enough or whether another solution might be more fitting. As this is not yet clear, it's possible that a solution will not be ready before the upcoming patch releases. However, we plan to spend time on this issue now.\n Zelldon: There was an L1 blocker again because of this https://jira.camunda.com/plugins/servlet/mobile#issue/SUPPORT-18997 \n\nHandled by @npepinpe \n npepinpe: Users are heavily impacted by this, so I would like to bump this to critical, with a focus on fixing timers. Timers are different from message correlation has they don't involve inter-partition communication, which may help narrow the scope of the fix for now (i.e. writes are guaranteed to succeed).\r\n\r\nThat said, I noticed some possible concurrency issues with the `DueDateTimerChecker`, which could lead to more timers than required being scheduled under high load.\r\n\r\nIf enabled, the `DueDateTimerChecker` runs in the asynchronous scheduler actor, separately from the stream processor.\r\n\r\nHowever, both actors will access the `DueDateTimerChecker`:\r\n\r\n`DueDateTimerChecker#scheduleTimer` is called from the engine/side-effects, i.e. processing actor. It then:\r\n\r\n- Accesses the following state: `shouldRescheduleChecker`, `checkerRunning`, `nextDueDate` (rw)\r\n- Checks if the checker is currently running. This is a non-volatile boolean check.\r\n- If it's not running, it schedules a task.\r\n\r\nAt the same time, scheduling is done on the async scheduler actor. This is the `TriggerEntitiesTask`. It:\r\n\r\n- Accesses the following state: `shouldRescheduleChecker`, `checkerRunning` (rw), `nextDueDate` (rw)\r\n\r\nIs this correct? If so we have non-volatile state being accessed by two different actors, and possibly some race conditions on when and if to schedule the next timer.\r\n\r\nMoving on the the possible solution. In order to keep it light of course, we'd need to to have a way to identify a timer trigger uniquely. Since every time instance can only be scheduled for trigger once in the state, it should be enough to distinguish them with the timer key, which is a single long. \r\n\r\nThe general idea, then, is to cache locally in the `DueDateTimerChecker` state (or some state) which commands have been written, so as to avoid writing them again. A perfect cache would be unbounded - you'd have to possibly store as many timers in there as could possibly exist (worst case scenario).  But a lossy cache is probably acceptable. Take `LongHashSet` from Agrona - an empty, pre-initialized set instance of 1 million keys takes 8MB of memory. Filled, it takes about twice, ~16MB. It's a bit hard to add LRU behavior to such a set however. Eviction could be random to keep things simple/fast, or we can use a `SortedSet`. However, a `TreeSet` takes about ~60MB for 1 million longs, so it's already substantially heavier - but it's pretty easy/fast to add LRU eviction to it. So on the off chance the key was evicted _before_ it was removed explicitly from the cache, you'd potentially still write a second trigger command. But the bigger the cache, the less likely this is to happen.\r\n\r\nI sync'd with @Zelldon today about this, and we decided to move forward with the local cache, only for checkers which perform no inter-partition communication.\r\n\r\nFor timers, we'll use the timer key as the unique cache ID. When iterating of timers, if the timer key is in the cache, then we skip it. Once the task result is built, we can populate the cache with all the timer keys we will be writing. Since the scheduler (even async) is sequenced, we're guaranteed that this write will succeed, or the whole thing will fail (and the cache would be \"restarted\"). We won't be touching things like leader election and so on. On recovery, it's still possible that the same timers would be triggered twice, but the overload load will be greatly reduced.\r\n\r\nThis solution is likely adaptable to other checkers which run locally, such as job timeout and message expiry. For messages we can easily use the key. For jobs, we can't use the job key, since you can have multiple activations/time outs. We could use the job key if we can guarantee that the cache is properly cleaned up whenever the job is activated.\r\n\r\nAnyway, long winded comment to say we'll get started on a bounded lossy cache-based prototype.\r\n\r\n\n npepinpe: So in the end, we'll build the cache on the stream processor side. I describe the approach we ended up with in the description of this PR: https://github.com/camunda/zeebe/pull/15073\r\n\r\nLet me know if you have questions. For now it's entirely on the stream platform/ZDP side, but it's still useful to know how it works. Plus, if you want to cache future scheduled commands in the future, you'll need to know where to add them :upside_down_face: \n npepinpe: See some benchmark results courtesy of @Zelldon - https://github.com/camunda/zeebe/pull/15073#issuecomment-1803887603 :tada: \n korthout: We took it off the ZPA board, as ZDP has found a solution on their side 🙇  Thanks again @Zelldon and @npepinpe \n dddpaul: Hi!\r\n\r\nThis looks like a wonderful job.  But this new timer cache doesn't solve my problem with bunch of UNIQUE timers from DIFFERENT process instances. I've illustrated my problem here https://github.com/camunda/zeebe/issues/5134#issuecomment-1752006281. My comment was stated as duplicate of this issue which was likely fixed with timer cache solution in PR #15136 (for 8.3).\r\n\r\nI could not understand how this cache solution will help me but had some hope and belief. Well, there no miracle happened.\r\nI've just tested on 8.3-stable\r\n![image](https://github.com/camunda/zeebe/assets/628226/19ab7e3f-7708-465b-8bce-215e55fd6278)\r\n\r\nThousands or millions of unique timer events still overload brokers:\r\n![image](https://github.com/camunda/zeebe/assets/628226/97951508-56da-4723-8910-3ee8149461eb)\r\n\r\nThis is my process with timer:\r\n![image](https://github.com/camunda/zeebe/assets/628226/471fd3e9-c5c5-4c0b-b4c8-e0a9263259b7)\r\n\r\n\r\n\r\n\r\n\n npepinpe: We're working on another solution for that in parallel. https://github.com/camunda/zeebe/issues/10087\n\nI know the issue specifies IPC, but the proposed solution will enforce rate limits between the different categories, user submitted commands, internal/scheduled commands, and remote ones.",
    "title": "Scheduled tasks should avoid overloading the streamprocessor"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/8938",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Bug Fixes",
    "gitHubText": "**Describe the bug**\r\n\r\n\r\nI run into this issue now several time. This time again I created a feel expression and deployed the model successfully. \r\n\r\nExpression:\r\n\r\n```\r\n=date an time (\"2022-03-21T11:15:00@Europe/Berlin\") - now()\r\n```\r\n\r\nCreating the instance works, but cause an incident. From the incident message it is totally unclear what is going on or what is wrong.\r\n\r\n```\r\nExpected result of the expression 'date an time (\"2022-03-21T11:15:00@Europe/Berlin\") - now()' to be one of '[DURATION, PERIOD, STRING]', but was 'NULL'\r\n```\r\n\r\nIf we take a look in the google console log we can see the real issue, [which is simply ignored](https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22camunda-cloud-240911%22%0Aresource.labels.location%3D%22europe-west1%22%0Aresource.labels.cluster_name%3D%22integration-worker-1%22%0Aresource.labels.namespace_name%3D%22061e827f-c1f1-486e-b9f7-263a1efdaedb-zeebe%22%0Aresource.labels.pod_name:%22zeebe-%22;cursorTimestamp=2022-03-21T10:06:05.543376569Z?project=camunda-cloud-240911) :imp: \r\n\r\n```\r\n \"Suppressed failure: no function found with name 'date an time' and 1 parameters\"\r\n```\r\n\r\nHere it might be easy to spot, but if users have bigger feel expression or more complex ones it might be not that simple. It is frustrating to find that issue, especially if an user has no access to the logs. \r\n\r\nThis is also more problematic if this values is later only consumes by some jobs and cause more issues, and is not visible as incident.\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nCreate process model with an invalid feel expression.\r\n<!--\r\nSteps to reproduce the behavior\r\n\r\nIf possible add a minimal reproducer code sample\r\n- when using the Java client: https://github.com/zeebe-io/zeebe-test-template-java\r\n\r\n-->\r\n\r\n**Expected behavior**\r\n\r\nWe create incidents for failed feel expression evaluation with a clear message, similar to the log message.\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Environment:**\r\n- Zeebe Version: 1.3.5<!-- [e.g. 0.20.0] -->\r\n- Configuration: <!-- [e.g. exporters etc.] -->\r\n\n\n Zelldon: This caused for example also this https://camunda.slack.com/archives/C034N0E5YCX/p1647857272889399\n Zelldon: Probably duplicate of https://github.com/camunda-cloud/zeebe/issues/5880 but tbh it is just annoying and I wanted to express my feeling here :sweat_smile: The other also still awaits stakeholder input, would be good to get this.\n saig0: Related feature request in the FEEL engine: https://github.com/camunda/feel-scala/issues/260\n saig0: With the new version of the FEEL engine (1.17.0), we could improve the UX. The new API doesn't return only the evaluation result but also potential warnings. We could append these warnings in the incident message to help the user to solve the problem. \r\n\r\nFor example, instead of creating an incident with the message:\r\n\r\n```\r\nExpected result of the expression 'date an time (\"2022-03-21T11:15:00@Europe/Berlin\") - now()' to be one of '[DURATION, PERIOD, STRING]', but was 'NULL'\r\n```\r\n\r\nWe could create an incident with the following message:\r\n\r\n```\r\nExpected result of the expression 'date an time (\"2022-03-21T11:15:00@Europe/Berlin\") - now()' to be one of '[DURATION, PERIOD, STRING]', but was 'NULL'. \r\nThe evaluation reported the following warnings:  [NO_FUNCTION_FOUND] No function found with name 'date an time' and 1 parameters; [INVALID_TYPE] Can't subtract '2023-09-25T12:00:43.591630872@Etc/UTC' from 'null'\r\n```\r\n\r\n---\r\n\r\ncc: @aleksander-dytko ",
    "title": "Feel error are causing bad user experiences"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/issues/15287",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Documentation",
    "gitHubText": "**Description**\r\n\r\nWe have identified the following steps to be missing from the developer handbook for adding new record types:\r\n\r\n* Inclusion of a new value type in the engine's supported value types to ensure events are replayed\r\n* Support for a new value type in Zeebe Process Test (ZPT)\r\n\r\nMissing those steps has led to bug reports and failing CI in the past.\r\n\n",
    "title": "Add missing steps to developer handbook"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/pull/15444",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Merged Pull Requests",
    "gitHubText": "Leaders track the configuration index of all members in the replication group so that it can send a configuration update to outdated members. Previously, the leader only updated the configuration index when receiving a successful configuration response. In cases where a leader initially accepted the current configuration but then loses it again, for example because of dataloss or because it never managed to commit the configuration, the leaders view of the members configuration index remained outdated: The leader thought member B had configuration index X but actually the member has no configuration at all. This could only be resolved by restarting the leader or when creating a new configuration.\r\n\r\nAs a fix, the append response now contains the configuration index. The leader updates the configuration index when it receives an append response. This allows followers to signal to the leader that they have no configuration at all or and outdated one. Before the leader tries to send the next append request, it will first send a configuration request and bring the follower up to date.\r\n\r\nOn the follower side, we now reject append requests if there is not current configuration. The append response has configuration index -1, guaranteeing that the leader will send a configure request next.\r\n\r\n### Backwards compatibility\r\n\r\nAdding a new field to the `AppendResponse` is safe, we have done it before: https://github.com/camunda/zeebe/pull/14063#discussion_r1311219403\r\n\r\nFollowers from the previous version do not send a configuration index. A leader from the new version will then read a 0 (default value for longs). To prevent that the follower from the previous version is then stuck in a configuration loop, we treat configuration index 0 as a special case and _don't_ update the configuration index. Effectively, we fall back to the old behavior where the configuration index is only updated when a configuration response is sent. This fallback is safe for us because we want to fix a _join_ bug where it's guaranteed that the configuration index is not 0.\r\n\r\nCloses #15381",
    "title": "fix(raft): resend configuration to members that lost their configuration"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/pull/15341",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Merged Pull Requests",
    "gitHubText": "## Description\r\nThe generations were not correctly set, because the wrong variables were referenced\r\n\r\n![versions4](https://github.com/camunda/zeebe/assets/2758593/4b297724-d64c-47ad-a75f-091ed7be9d87)\r\n![versions3](https://github.com/camunda/zeebe/assets/2758593/0f9b9af8-1e49-4911-b925-998444e69ff0)\r\n![versions2](https://github.com/camunda/zeebe/assets/2758593/2caed5e7-0730-4265-87c8-595363255e42)\r\n![versions](https://github.com/camunda/zeebe/assets/2758593/c6defee7-cc6c-4528-850a-386d5c5bacc3)\r\n\r\n\r\n\r\nThe long names make it really hard to track... I was thinking whether we should maybe shorten them.\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details about these items in our wiki page about [Pull Requests and Code Reviews](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- Please check the items that apply, before merging or (if possible) before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to [backport](https://github.com/camunda/zeebe/compare/stable/0.24...main?expand=1&template=backport_template.md&title=[Backport%200.24]) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/1.3`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n* [ ] The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\r\n* [ ] If the PR changes how BPMN processes are validated (e.g. support new BPMN element) then the Camunda modeling team should be informed to adjust the BPMN linting.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Operate](https://github.com/camunda/operate/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Web Modeler](https://github.com/camunda/web-modeler/issues)\r\n- [ ] [Desktop Modeler](https://github.com/camunda/camunda-modeler/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n\r\nPlease refer to our [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n",
    "title": "fix: set correct generation"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/pull/15340",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Merged Pull Requests",
    "gitHubText": "## Description\r\n\r\nBring back the version calculation, which was broken without the patch versions.\r\n\r\nFor me it was easier to bring the part back, and not refactor it too much.\r\n\r\nhttps://github.com/camunda/zeebe/commit/7039bf942fe31b9029ec23ada53a18f85b093355#diff-6a936ccc311a8f5af0da4203c51fec756b63a03f1a9b7dbd9c7e1b7b80531c1d\r\n<!-- Please explain the changes you made here. -->\r\n",
    "title": "Calculate the right versions"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/pull/15317",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Merged Pull Requests",
    "gitHubText": "## Description\r\n\r\nAllow easy disabling of TCC if required by simply removing the secret.\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details about these items in our wiki page about [Pull Requests and Code Reviews](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- Please check the items that apply, before merging or (if possible) before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to [backport](https://github.com/camunda/zeebe/compare/stable/0.24...main?expand=1&template=backport_template.md&title=[Backport%200.24]) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/1.3`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n* [ ] The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\r\n* [ ] If the PR changes how BPMN processes are validated (e.g. support new BPMN element) then the Camunda modeling team should be informed to adjust the BPMN linting.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Operate](https://github.com/camunda/operate/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Web Modeler](https://github.com/camunda/web-modeler/issues)\r\n- [ ] [Desktop Modeler](https://github.com/camunda/camunda-modeler/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n\r\nPlease refer to our [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n",
    "title": "refactor: allow easy disabling via secret removal"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/pull/15201",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Merged Pull Requests",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\nIncludes `Form` records in the supported Engine records so they are replayed.\r\n\r\nA test case is added as a regression test.\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #15194\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details about these items in our wiki page about [Pull Requests and Code Reviews](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- Please check the items that apply, before merging or (if possible) before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [x] The changes are backwards compatibility with previous versions\r\n* [x] If it fixes a bug then PRs are created to [backport](https://github.com/camunda/zeebe/compare/stable/0.24...main?expand=1&template=backport_template.md&title=[Backport%200.24]) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/1.3`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [x] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n* [ ] The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\r\n* [ ] If the PR changes how BPMN processes are validated (e.g. support new BPMN element) then the Camunda modeling team should be informed to adjust the BPMN linting.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Operate](https://github.com/camunda/operate/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Web Modeler](https://github.com/camunda/web-modeler/issues)\r\n- [ ] [Desktop Modeler](https://github.com/camunda/camunda-modeler/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n\r\nPlease refer to our [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n",
    "title": "Replay deployed forms"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/zeebe/pull/14217",
    "component": "Zeebe",
    "subcomponent": "Misc",
    "context": "Merged Pull Requests",
    "gitHubText": "## Description\r\n\r\nEnsure commands stop on permanent errors, whatever the behavior of the credential provider.\r\n- permanent errors are considered non-retry-able\r\n- otherwise default to the retry predicate\r\n\r\n## Related issues\r\n\r\n#6168 \r\n\r\ncloses #6168 \r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details about these items in our wiki page about [Pull Requests and Code Reviews](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- Please check the items that apply, before merging or (if possible) before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to [backport](https://github.com/camunda/zeebe/compare/stable/0.24...main?expand=1&template=backport_template.md&title=[Backport%200.24]) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/1.3`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n* [ ] The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\r\n* [ ] If the PR changes how BPMN processes are validated (e.g. support new BPMN element) then the Camunda modeling team should be informed to adjust the BPMN linting.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Operate](https://github.com/camunda/operate/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Web Modeler](https://github.com/camunda/web-modeler/issues)\r\n- [ ] [Desktop Modeler](https://github.com/camunda/camunda-modeler/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n\r\nPlease refer to our [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n",
    "title": "fix(clients/go): client does not retry on permanent errors"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/6023",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat: enable process instance migration in UI"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/6014",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nBranch for PI migration back-end changes https://github.com/camunda/operate/issues/5704\r\n\r\n- updated importer to import migrated elements (process instances, flow nodes, variables)\r\n- added handler for MIGRATE_PROCESS_INSTANCE operation\r\n- added integration tests\r\n\r\nCloses https://github.com/camunda/operate/issues/5891\r\nCloses https://github.com/camunda/operate/issues/5892\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): be-5704-pi-migration-test"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5972",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nImplements acceptance criteria\r\n\r\n> - Show operation entry when there is a migration operation (this was working already)\r\n> - Add Migrate icon\r\n> - Add link to process instances filters (with operation id filter active)\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5903 \r\n\r\n## TODO\r\n\r\n- [ ] Set feature flags to false\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @gastonpillet01 You can check the operations panel. There should be a running migration operation already: https://fe-5903-migrate-operation-entry.operate.camunda.cloud/processes?active=true&incidents=true",
    "title": "feat(feature-flagged): add migration entry to operations panel"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5973",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nuse dependency injection for all dependencies instead of autowired\r\n\r\nremoved unneeded base class OpensearchDao\r\n\r\nrenamed OpensearchPageableDao to OpensearchSearchableDao for better clarity\r\n\r\nmoved operate properties dependency to specific dao using it instead of base class\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): clean up opensearch dao inheritence and dependency injection"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5969",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nWith this PR the migrate button will be disabled if the user selects process instance(s) that are called by a parent instance (call activity)\r\n\r\nTo test this you can select `called-process` and then check the disabled button and the tooltip.\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5858\r\n\r\n## TODO\r\n\r\n- [ ] Set feature flags to false\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @gastonpillet01 Please check here https://fe-5858-disable-migration-button.operate.camunda.cloud/ (see description on how to test)\n pedesen: @ArezooAzar Please test here: https://fe-5858-disable-migration-button.operate.camunda.cloud/ (see description on how to test)\n pedesen: > @pedesen : please review the test case [here.](https://camunda.testrail.com/index.php?/cases/view/172208&group_by=cases:section_id&group_id=20562&group_order=asc&display_deleted_cases=0)\r\n> \r\n> It is a modified test case. Step 7 covers this feature.\r\n\r\n@ArezooAzar Thanks! I updated the test case in step 7: \"called-process\" should be selected. ",
    "title": "feat(feauture-flagged): disable migrate button for called process instances"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5961",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nImplements acceptance criteria (see #5732):\r\n\r\n> Nice to have: When I click on a row in the bottom panel, and it is already mapped to a target flow node, the related target flow node will also be highlighted in the target diagram. If feasible, row should also be highlighted when a mapped flow node in the target diagram is clicked from the diagram (we should consider the scenario where two different source flow nodes could be mapped to the same target flow node. in that case, design expectation is to highlight both source flow nodes in the left diagram)\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated to #5732 \r\n\r\n## TODO:\r\n\r\n* [x] set feature flags to false\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @gastonpillet01 Please check here: https://fe-5732-target-flow-node-selection.operate.camunda.cloud/\n pedesen: @ArezooAzar Please test here: https://fe-5732-target-flow-node-selection.operate.camunda.cloud/",
    "title": "feat(feature-flagged): add target flow node selection to migration view"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5951",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "feat(backend): Create batch operation for process instance migration\r\n\r\n- added missing enum value\r\n\r\nCloses #5890\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): Create batch operation for process instance migration"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5952",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n\r\nThis PR implements the following acceptance criteria in summary view (see:  #5737)\r\n\r\n> - Show green badges in left diagram with number of active instances\r\n> - Show red badges in left diagram with number of incidents\r\n> - Show blue badges in right diagram with number of expected migrated instances\r\n\r\n## TODO:\r\n\r\n - [ ] set feature flags to false\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5737\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @gastonpillet01 Please check here: https://fe-5737-intance-migration-summary-badges.operate.camunda.cloud/\n pedesen: @ArezooAzar Please test here: https://fe-5737-intance-migration-summary-badges.operate.camunda.cloud/",
    "title": "feat(feature-flagged): highlight instances in migration summary view"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5953",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n* Also some minor refactorings\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated #5586\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): Implement OpensearchDecisionInstanceDao"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5950",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n* Add `OpensearchDecisionRequirementsDao` and `OpensearchDecisionDefinitionDao`\r\n  * `OpensearchDecisionRequirementsDao` was required by `OpensearchDecisionDefinitionDao`\r\n\r\n## Related issues\r\n#5586\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): add OpensearchDecisionRequirementsDao and OpensearchDecisionDefinitionDao"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5942",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n- Extract OpensearchPageableDao\r\n- implement OpensearchFlowNodeStatisticsDao\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat: OpensearchFlowNodeStatisticsDao"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5931",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nImplements the acceptance criteria (see #5738):\r\n\r\n> - Send an API request to Operate backend to trigger migration\r\n> - Navigate to instances list view with the target process and version selected\r\n> - Expand operations panel\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated to  #5738\r\n\r\n## TODO\r\n- [ ] set `IS_INSTANCE_MIGRATION_ENABLED` to false\r\n- [ ] set `IS_INSTANCE_MIGRATION_API_MOCKED` to false\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @ArezooAzar Please test here: https://fe-5738-comfirm-instance-migration.operate.camunda.cloud/",
    "title": "feat(feature-flagged): request batch process on migration confirmation"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5940",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "feat(backend): Create batch operation for process instance migration\r\n\r\n- fixed template version\r\n\r\nCloses #5890\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): Create batch operation for process instance migration"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5898",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n- added new operation type, MIGRATE_PROCESS_INSTANCE\r\n- added model for migration plan\r\n- added integration tests\r\n\r\nCloses #5890\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): Create batch operation for process instance migration"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5900",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nThis PR implements the following acceptance criteria\r\n\r\nTarget flow nodes\r\n\r\n> - Show all service tasks as targets from the target process definition\r\n\r\nGeneral\r\n\r\n> - \"Next\" button will be disabled until at least one element is mapped\r\n\r\n\r\n## TODO \r\nset `IS_INSTANCE_MIGRATION_ENABLED` to false\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5731\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @gastonpillet01 Please check here: https://fe-5731-show-target-elements.operate.camunda.cloud/\n pedesen: @ArezooAzar Please test here: https://fe-5731-show-target-elements.operate.camunda.cloud/",
    "title": "feat(feature-flagged): add target element mapping in migration view"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5902",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nImplementation of OpensearchFlowNodeInstanceDao and OpensearchProcessInstanceDao\r\n\r\nCreated unit tests\r\n\r\nUpdated integration tests\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated to #5586 \r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [x] I've written a clear changelist description\r\n* [x] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [x] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [x] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): implement OpensearchFlowNodeInstanceDao and OpensearchProcessInstanceDao"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5894",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nImplements the functionality for OpensearchFlowNodeInstanceDao with unit tests\r\n\r\nSmall change to OpensearchDao to simplify some common logic\r\n\r\nImprove some of the tests in FlowNodeInstanceDaoIT\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated to #5135 \r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [x] I've written a clear changelist description\r\n* [x] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [x] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [x] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [x] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): implement OpensearchFlowNodeInstanceDao with tests and improve IT coverage"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5841",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "\r\n## Description\r\n\r\n### TODO\r\n\r\n- [x] set IS_INSTANCE_MIGRATION_ENABLED to false\r\n\r\nCovers Acceptance criteria:\r\n\r\n```\r\n- [ ]  Notification banner is visible on top of the diagrams\r\n    - [ ]  Banner should be excluded from the 'resizable' part of the page\r\n    - [ ]  Process name/versions should be bold instead of blue in the designs\r\n```\r\n\r\n\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated to #5737\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n huygur: @gastonpillet01 please check here https://fe-5737-migration-summary-notification.operate.camunda.cloud/\n pedesen: @ArezooAzar Please test here: https://fe-5737-migration-summary-notification.operate.camunda.cloud/",
    "title": "feat(feature-flagged): display summary notification in migration summary page"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5827",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "- highlight bottom panel row on diagram flow node selection\r\n- highlight source diagram panel flow node on bottom panel row click\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n### TODO\r\n\r\n- [x] set IS_INSTANCE_MIGRATION_ENABLED to false\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nrelated to #5732\r\n\r\nCovers acceptance criterias:\r\n\r\n```\r\n- [ ]  When I click on a selectable flow node in source diagram, the related row in the bottom panel will be highlighted too\r\n- [ ]  When I click on a row in the bottom panel, the related source flow node in the source diagram will be selected too\r\n```\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n huygur: @gastonpillet01 please check here https://fe-5732-source-flownode-selection.operate.camunda.cloud/\n huygur: @gastonpillet01 could you check again here https://fe-5732-source-flownode-selection.operate.camunda.cloud/ ? I applied the fix you asked for: de-selecting flow node when a selected row is clicked again \n huygur: @ArezooAzar please check here https://fe-5732-source-flownode-selection.operate.camunda.cloud/",
    "title": "feat(feature-flagged): highlight target flow node on selection"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5825",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\nImplements acceptance criteria\r\n\r\n>  Show all service tasks as source flow nodes, no other flow node types will be available in first iteration\r\n\r\nHere are some scenarios to test:\r\n\r\n- Select `Order process` `Version 2`:\r\n   - only `Check payment` and `Request for payment` should be present in the mapping table\r\n- Select a process without service tasks:\r\n   - There will be an error that there are no flow nodes to map\r\n  \r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\nRelated to #5731 \r\n\r\n## TODO\r\n\r\nset `IS_INSTANCE_MIGRATION_ENABLED` to false\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n pedesen: @gastonpillet01 Please check here: https://fe-5731-show-mappable-elements.operate.camunda.cloud/\r\nI added some test scenarios to the description. Would be nice if you could check these\r\n\n pedesen: @ArezooAzar Please test here: https://fe-5731-show-mappable-elements.operate.camunda.cloud/",
    "title": "feat(feature-flagged): show mappable flow nodes in migration mode"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5860",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\nAdds the opensearch byKey() functionality that is equivalent to the elasticsearch byKey()\r\n\r\nAdded unit test coverage, expanded IT coverage\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [x] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [x] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [x] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): implement byKey() on OpensearchVariableDao and add test coverage"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5815",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n### TODO\r\n\r\n- [ ] set IS_INSTANCE_MIGRATION_ENABLED to false\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5743\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n huygur: @gastonpillet01 please check here https://fe-5743-leave-migration-mode.operate.camunda.cloud/\n huygur: @ArezooAzar please check here  https://fe-5743-leave-migration-mode.operate.camunda.cloud/",
    "title": "feat(feature-flagged): leave migration mode modal"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5834",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n### TODO\r\n\r\n- [ ] set IS_INSTANCE_MIGRATION_ENABLED to false\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5804 \r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n huygur: @gastonpillet01 please check here https://fe-5804-migration-helper-modal.operate.camunda.cloud/\n huygur: @ArezooAzar  please check here https://fe-5804-migration-helper-modal.operate.camunda.cloud/\r\n\r\n",
    "title": "feat(feature-flagged): display modal on migrate button click"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5856",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n* Related to #5586 \r\n* Implement OpensearchProcessDefinitionDao in terms of OpensearchDao\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\n\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "feat(backend): implement OpensearchProcessDefintionDao"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5807",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n### TODO\r\n\r\n- [x] set IS_INSTANCE_MIGRATION_ENABLED to false\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5777\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n huygur: @gastonpillet01 please check here https://fe-5777-exit-migration-modal.operate.camunda.cloud/\n huygur: @ArezooAzar please check here https://fe-5777-exit-migration-modal.operate.camunda.cloud/",
    "title": "feat(feature-flagged): add exit migration button"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/6047",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5919 \r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): fix resource based permissions on SaaS"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/6019",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\nThis PR contains different fixes, so that Operate can continue running after data loss (random Operate/Zeebe indices/aliases deleted from Elastic).\r\n\r\n* on startup when we check the completeness of schema, added the check for aliases to be present. If some of them is not there, it will be added.\r\n* when post importer is flushing it's position to `import-position` index, it does `upsert` query instead of `update` as the data there can also be randomly deleted.\r\n* incident post import has a flag now `postImporterIgnoreMissingParents=true/false (default: false)`. When enabled it will ignore several errors that may happen during incident post processing. The stacktraces for possible errors are [in the issue](https://github.com/camunda/operate/issues/5984).\r\n* in importer we ignore missing parent process instances and flow node instances and continue importing as if the record is not the part of the hierarchy. We log the warnings with all the data.\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #5984\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): different fixes to continue after data loss"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/6025",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "+ add more callbacks for Identity params\r\n\r\ncloses #5919\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): fix initialization of PermissionsService"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5993",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): Implement index lifecycle for Opensearch (ISM) #5612"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5991",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\nWhen SessionService is constructed, the postConstruct method starts a scheduled deletion of expired session ids. This eventually calls one of the two SessionRepository beans, which makes a static method call to DatabaseInfo.getCurrent(). This is all done during bean creation, and the call to DatabaseInfo is static, so there is no guarantee that the DatabaseInfo bean has been created and the applicationContext set. It is therefore possible to cause a NPE in getCurrent(), which assumed applicationContext had already been set. Adding a guard would eliminate the NPE, but could potentially report the wrong database type when opensearch is used (since Elasticsearch is the default return value). The real solution is to fix the bean creation order so DatabaseInfo is fully instantiated before any implementations of AbstractIndexDescriptor.\r\n\r\n- Added a NPE guard in DatabaseInfo.isCurrent()\r\n- Added a log to output if this function is called before applicationContext has been set\r\n- Added a dependency (through Autowired) in AbstractIndexDescriptor which will force spring to create DatabaseInfo completely before any of the components that extend AbstractIndexDescriptor\r\n\r\nIt is possible this may have to be done in other places, for now this will prevent the NPE and alert us if this happens elsewhere.\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [x] I've written a clear changelist description\r\n* [x] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): fix race condition where DatabaseInfo bean is accessed before fully constructed"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5970",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): 5787 NPE issue fix"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5959",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): OpensearchIncidentDao implementation"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5962",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): fix timeout for Opensearch healthcheck"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5935",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "\r\n\r\n## Description\r\n\r\nIntroduced searchAsMap method to ExtendedOpenSearchClient and OpenSearchDocumentOperations.\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): OpenSearch: Workaround for Parent Aggregation issue in java client (#5787)"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5897",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n1. Extended `OpenSearchClient` by adding `fixedSearch` method in `ExtendedOpenSearchClient`.\r\n2. Workarounded an issue in `SearchRequest` by copying it's source into `FixedSearchRequest` and making fix there.\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [x] All acceptance criteria described in the issue are met\r\n* [x] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [x] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n\n oleksandr-kriuchenko-lohika: > I can't find the fix in `FixedSearchRequest`. Can we mark this somehow with comment. Is the fix expressible in the name of the class?\r\n\r\nGood point! I see 2 options here - we can merge a \"copied\" version without a fix in one commit and then a fix in a separate one. Otherwise - yes we can just mark it with a comment in the code. Which one would you prefer?\n matt-whiteman: I think you can avoid having to changing the bean type within all the clients and operations objects since ExtendedOpenSearchClient extends OpenSearchClient. You would just need to update the **fixedSearch** function in OpenSearchDocumentOperations to look like:\r\n\r\n\r\n>  public <R> SearchResponse<R> fixedSearch(SearchRequest request, Class<R> classR) {\r\n>    if (openSearchClient instanceof ExtendedOpenSearchClient) {\r\n>        return safe(() -> (ExtendedOpenSearchClient)openSearchClient.fixedSearch(request, classR), e -> defaultDeleteErrorMessage(request.index().toString()));\r\n>        }\r\n>        else {\r\n>           return search(request, classR);\r\n>        }\r\n>   }\r\n\r\n  \r\n  The benefit of this would be that if the fix ever gets put into the OpenSearch client and we want to remove ExtendedOpenSearchCLient, it's in much fewer places.\n oleksandr-kriuchenko-lohika: > I think you can avoid having to changing the bean type within all the clients and operations objects since ExtendedOpenSearchClient extends OpenSearchClient. You would just need to update the **fixedSearch** function in OpenSearchDocumentOperations to look like:\r\n> \r\n> > public  SearchResponse fixedSearch(SearchRequest request, Class classR) {\r\n> > if (openSearchClient instanceof ExtendedOpenSearchClient) {\r\n> > return safe(() -> (ExtendedOpenSearchClient)openSearchClient.fixedSearch(request, classR), e -> defaultDeleteErrorMessage(request.index().toString()));\r\n> > }\r\n> > else {\r\n> > return search(request, classR);\r\n> > }\r\n> > }\r\n> \r\n> The benefit of this would be that if the fix ever gets put into the OpenSearch client and we want to remove ExtendedOpenSearchCLient, it's in much fewer places.\r\n\r\nGood suggestion, thanks!\n oleksandr-kriuchenko-lohika: > I can't find the fix in `FixedSearchRequest`. Can we mark this somehow with comment. Is the fix expressible in the name of the class?\r\n\r\nRegarding the \"Is the fix expressible in the name of the class\" - that's a good question, naming is undeniably the most complicated part of the programming at all times )) My intention was to highlight that it represents a fixed (workarounded actually) version of the original opensearch `SearchRequest`. The idea is that it might be accumulating all the necessary fixes and that is the whole purpose of it and the only reason for its existance. But I would gladly listen to alternatives.",
    "title": "fix(backend): Workaround for search_after issue in OS java client (#5788)"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/operate/issues/5879",
    "component": "Operate",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Related issues\r\n\r\n<!-- Which issues are closed by this PR or are related -->\r\n\r\ncloses #\r\n\r\n<!-- Cut-off marker\r\n_All lines under and including the cut-off marker will be removed from the merge commit message_\r\n\r\n## Definition of Ready\r\n\r\nPlease check the items that apply, before requesting a review.\r\n\r\nYou can find more details in our [wiki page] (https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews).\r\n\r\n* [ ] I've reviewed my own code\r\n* [ ] I've written a clear changelist description\r\n* [ ] I've narrowly scoped my changes\r\n* [ ] I've separated structural from behavioural changes\r\n-->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\nCode changes:\r\n* [ ] All acceptance criteria described in the issue are met\r\n* [ ] The changes are backwards compatibility with previous versions\r\n* [ ] If it fixes a bug then PRs are created to backport (https://github.com/korthout/backport-action#how-it-works) the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. `backport stable/8.2`) to the PR, in case that fails you need to create backports manually.\r\n\r\nTesting:\r\n* [ ] There are unit/integration tests that verify all acceptance criterias of the issue\r\n* [ ] New tests are written to ensure backwards compatibility with further versions\r\n* [ ] The behavior is tested manually\r\n* [ ] The change has been verified by a QA run\r\n* [ ] The impact of the changes is verified by a benchmark\r\n\r\nDocumentation:\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\nOther teams:\r\nIf the change impacts another team an issue has been created for this team, explaining what they need to do to support this change.\r\n- [ ] [Zeebe](https://github.com/camunda/zeebe/issues)\r\n- [ ] [Tasklist](https://github.com/camunda/tasklist/issues)\r\n- [ ] [Optimize](https://github.com/camunda/camunda-optimize/issues)\r\n- [ ] Zeebe Play\r\n      \r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\r\nSome additional [review guidelines](https://github.com/camunda/zeebe/wiki/Pull-Requests-and-Code-Reviews#code-review-guidelines).\r\n\n",
    "title": "fix(backend): 5788 Add opensearch-java-client module"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3900",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3787 \r\n\r\nBumping ES Version to support ES 8.9+\r\n\r\nI had to change the ElasticSearchConnector to add a new Bean, following the instructions from here: https://github.com/spring-projects/spring-boot/issues/36669.\r\n\r\nSpring boot 3.1 isn't compatible with ES java client 8.9, so they proposed a workaround.\r\n\r\nOther than that, I just updated ES versions everywhere.\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  96 files  ±0    96 suites  ±0   1h 48m 3s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 1m 17s\n496 tests ±0  486 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n518 runs  ±0  508 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit 58e231d2. ± Comparison against base commit 12915398.\n\n[test-results]:data:application/gzip;base64,H4sIAA2JcGUC/03MSw6DIBSF4a0Yxh0gr167meaCmJCqNDxGpnsvElsY/t9JzkEWt9pIHsOkbgOJ2aVWcw6YnN9LKwG8SBnTOYu613rGbMxJ0NHLvQuN9C8LurVIAxuCD5eEvJ+ncoQrfp+SNukuK3SPtftD47fNpRJEgmV8nJnSamKgrUYUdw0KgVsArhVSXIDO5PMFnuBcSwoBAAA=\n\n:recycle: This comment has been updated with latest results.",
    "title": "feat: support for ES 8.9"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3868",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3842 \r\nCloses #3820 \r\nCloses #3819\r\n\r\n## Description\r\n\r\nThis PR primarily focuses on implementi ng user group retrieval and access restrictio ns in task management . It introduces changes to support OpenSearch , adds integratio n tests, and updates the TaskContro ller unit tests. It also optimizes queries and adds an environmen t variable. The PR includes changes in several files, but the most significan t modificati ons are in the TaskContro llerTest.j ava, TaskStoreO penSearch. java, and TaskServic e.java files\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n0 tests   0 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  0s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\")\n0 suites  0 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\")\n0 files    0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\")\n\nResults for commit dc42b77b.\n\n[test-results]:data:application/gzip;base64,H4sIACqAZ2UC/1WMQQ7CIBBFr9KwdlFlKtbLGGCGZGJbzACrxrvb1EZh99/7yVtV4ImSunf9qVOpcP4BFrGZ43LgduRU70cq3rfiya9GBMtTI0gkymGkLKmade7L/9rOVWznuuXjPHPeQKGHizPGAcBt7K8OCbQdRhvIkLZOezSDCWdU7w8ZoQdY+wAAAA==\n\n:recycle: This comment has been updated with latest results.",
    "title": "feat: Implement User Group Retrieval and Access Restrictions in Tasklist (Self Management)"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3786",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3773 \r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\nUpdate search task API to fetch Task variables:\r\n* After querying for tasks, using `VariableService.getVariablesPerTaskId(List<GetVariablesRequest>)` to fetch tasks' variables, matching the `includeVariables` in the search request \r\n* Runtime variables are fetched for `CREATED` tasks\r\n* Task variables (variables snapshot on task completion) are fetched for `COMPLETED` tasks\r\n* Draft variables are not fetched\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  95 files  +  95    95 suites  +95   1h 32m 21s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 1h 32m 21s\n486 tests +486  476 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +476  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +10  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n508 runs  +508  498 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +498  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +10  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit bd19c49e. ± Comparison against base commit c5b7e5e7.\n\n[test-results]:data:application/gzip;base64,H4sIAMhaZ2UC/03MQQ6DIBCF4asY1l1InKHQyzQIQ0Kq0iCsmt69YKyw/L+XvA9zfqGdPQaFt4Ht2adWNkedfNhKIwIvUsZUZ5DiX889G1Pp3tHLvwvx8RKn/VKkAcUY4ikxb/UUR3nG9amadJcHdI9H94cmrKtPJdhsuTKgSINAA5aMFBxRCnIwO+dITRomEop9f2iZsBwKAQAA\n\n:recycle: This comment has been updated with latest results.\n houssain-barouni: verified by @esraagamal6 https://github.com/camunda/tasklist/issues/3772#issuecomment-1831967518",
    "title": "feat: Extend Task Search API to Include Task Variables"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3899",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3727\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [x] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [x] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n",
    "title": "feat: Update error message when form fetch fails"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3846",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses https://github.com/camunda-cloud/identity/issues/2331\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\nThe changes in this PR are essentially the Tasklist version of the changes [here](https://github.com/camunda/operate/pull/5708) in the Operate codebase. For context this PR replaces the old configuration style for the Identity SDK in favour of the new spring boot start approach.\r\n\r\nI have also tested this approach with Azure AD and was able successfully authenticate (the connection details for Tasklist can be found in Keeper [here](https://keepersecurity.eu/vault/#detail/Yu_XXRORi1rdEU2otuHe9A)).\r\n\r\nTesting:\r\n\r\n- [x] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [x] The fix/feature is tested manually by the author\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  95 files    95 suites   2h 4m 22s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\")\n480 tests 470 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") 10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") 0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\")\n502 runs  492 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") 10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") 0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\")\n\nResults for commit b2bff0fd.\n\n[test-results]:data:application/gzip;base64,H4sIABp/ZGUC/03MSw6DIBSF4a0Yxh0AXgG7mUZeCalKgzBquvdejC0M/+8k5018WN1B7sM83QZylJBb2ZKWHOKOLUFwFBxznUHRXz2OYkwl2dEzvJBYE7+EFaWBSymmS1LZ6+lE+RX/z7lJd3lC93h2f2jitoWMQTTX3lNvRys4yNFyJUAzMEKBdF5pZah2jBry+QLWEW6mCgEAAA==\n\n:recycle: This comment has been updated with latest results.",
    "title": "feat: use identity spring boot starter"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3738",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3709 \r\nCloses #3712 \r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\non Delete Process definition event, delete process definition related objects in Tasklist\r\n  - Tasks on partition provided in Zeebe record\r\n  - TaskVariables on partition provided in Zeebe record\r\n  - Process entity\r\n  - Embedded forms\r\n\r\nI did not include ProcessInstances (as was presented in kickoff) as they don't refer to the process definition id. But there are deleted anyway with Archiving job along with FlowNodeInstances and runtime Variables\r\n\r\nThere is another possible approach to implement this. Instead of handle the deletion by the importer, we can:\r\n- mark a process definition for deletion by the importer (isDeleted flag on process entity)\r\n- use the archiver to delete the related objects\r\n\r\nPros:\r\n- does not block the importer in case of high number of objects to delete\r\n- Separation of concerns (importer just import Zeebe records without any logic)\r\n\r\nCons:\r\n- we need to filter out everywhere the process entities with isDeleted flag (unless we consider the archive frequency is good enough and we can live with few seconds of inconsistency)\r\n\r\n@marcosgvieira @nathansandi I hesitated between the two approaches, I still don't have enough perspective to assess the impact of a process deletion with thousands of tasks and if this can slow down the importer\r\n\r\n## Test cases:\r\n\r\n- [ ] [When highest version of process is deleted from Operate the one below is displayed in tasklist](https://camunda.testrail.com/index.php?/cases/view/183835)\r\n- [ ] [When intermediate version is deleted in Operate this version should be deleted in tasklist](https://camunda.testrail.com/index.php?/cases/view/183836&group_by=cases:section_id&group_order=asc&display_deleted_cases=0&group_id=2443)\r\n- [ ] [When all versions of process are deleted from Operate process should be deleted in tasklist](https://camunda.testrail.com/index.php?/cases/view/183837)\r\n- [ ] [Process defenition deletion reflects in Tasklist with Multitenancy enabled](https://camunda.testrail.com/index.php?/cases/view/184937)\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  96 files  +2    96 suites  +2   1h 42m 3s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 3m 2s\n482 tests +2  472 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +2  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n504 runs  +2  494 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +2  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit ae7bcaab. ± Comparison against base commit e710e9cc.\n\n[test-results]:data:application/gzip;base64,H4sIANKyV2UC/03MTQ6DIBhF0a0Yxh0AIj/dTAP4kZCqNAgj070XjBWG97zkHcj5BXb0HBR/DGjPPrWac9TJh600J3QsUsZUZybpv157traS6OjtP4UIvsVpvxRpADGGeEnMWz2dMLvi/lRNussTusez+0Mb1tWnEkiDMFZrM1EnjJsBDKGaAB+tJI5jkFIJo5hF3x/eKb+FCgEAAA==\n\n:recycle: This comment has been updated with latest results.\n nathansandi: > @marcosgvieira @nathansandi I hesitated between the two approaches, I still don't have enough perspective to assess the impact of a process deletion with thousands of tasks and if this can slow down the importer\r\n\r\nHello @houssain-barouni, are the tasks deleted on Zeebe, once we have the process deletion (with event)? If yes, but you are concerning about the importers, what I would suggest, if this may affect the behaviour over the **importers**, we also can apply the deletion of the tasks in the same way as you are deleting data inside our indexes. \r\n\r\nHowever, usually gRPC events are supposed to have fast process over the events and in theory should not be a problem. Considering as well as the user case of the Process deletion (more dev, as we discussed on kick-off), maybe delete over the importer will not be a problem if Zeebe send the event for Job/Task too. What do you think?\r\n\r\n(I understand also that this can be done separated in another PR)\n houssain-barouni: > > @marcosgvieira @nathansandi I hesitated between the two approaches, I still don't have enough perspective to assess the impact of a process deletion with thousands of tasks and if this can slow down the importer\r\n> \r\n> Hello @houssain-barouni, are the tasks deleted on Zeebe, once we have the process deletion (with event)? If yes, but you are concerning about the importers, what I would suggest, if this may affect the behaviour over the **importers**, we also can apply the deletion of the tasks in the same way as you are deleting data inside our indexes.\r\n> \r\n> However, usually gRPC events are supposed to have fast process over the events and in theory should not be a problem. Considering as well as the user case of the Process deletion (more dev, as we discussed on kick-off), maybe delete over the importer will not be a problem if Zeebe send the event for Job/Task too. What do you think?\r\n> \r\n> (I understand also that this can be done separated in another PR)\r\n\r\nThank you @nathansandi for these insights. I already posted this question in [ask-zeebe](https://camunda.slack.com/archives/CSQ2E3BT4/p1698768046424059). Unfortunately, on process def deletion, we will not receive any Task delete events as the tasks are removed from runtime state as soon they are completed or terminated. Meaning they already don't exist in Zeebe when the process definition is deleted from Zeebe. So we will receive only one event (or to be more precise, one event per zeebe partition) about process definition deletion and nothing else.\n esraagamal6: @houssain-barouni Can you please review the test cases taking into consideration that it would be executed for both ES and OS?\n houssain-barouni: > @houssain-barouni Can you please review the test cases taking into consideration that it would be executed for both ES and OS?\r\n\r\nI don't have access to TestRail, I opened a ticket to Helpdesk. I will review them once it is done\n houssain-barouni: > @houssain-barouni Can you please review the test cases taking into consideration that it would be executed for both ES and OS?\r\n\r\n@esraagamal6 LGTM\r\n* you can add extra checks about Completed tasks being deleted for respective deleted process definition (when you delete V2 process def, Tasks related to V2 process def are deleted in Tasklist)\r\n* in one scenario try to wait more than 1 hour after task completion before deleting the process. One hour is the time required for a completed task to be archived. The archived task should be deleted as well.\n esraagamal6: Testing updates:\r\n\r\n- Completed tasks are removed from Tasklist completed panel when it is deleted via `zbctl delete resoource` but when it is deleted from Operate UI the completed tasks remains in the completed tasks panel in Tasklist -> @houssain-barouni  is investigating this\r\n- **Some** processes could be deleted via `zbctl delete resoource`  although it has running instances and in this case those running instances remains in Tasklist but the task details data is never retrieved in Tasklist UI `\r\n404 Not Found` , but this should not be a blocker because this should be handled in Zeebe team in this [ticket](https://github.com/camunda/zeebe/issues/15221)\n houssain-barouni: > Testing updates:\r\n> \r\n> * Completed tasks are removed from Tasklist completed panel when it is deleted via `zbctl delete resoource` but when it is deleted from Operate UI the completed tasks remains in the completed tasks panel in Tasklist -> @houssain-barouni  is investigating this\r\n> * **Some** processes could be deleted via `zbctl delete resoource`  although it has running instances and in this case those running instances remains in Tasklist but the task details data is never retrieved in Tasklist UI ` 404 Not Found` , but this should not be a blocker because this should be handled in Zeebe team in this [ticket](https://github.com/camunda/zeebe/issues/15221)\r\n\r\n@esraagamal6 \r\nI have reproduced the issue:\r\n- Zeebe is configured with 2 partitions\r\n- Some tasks are created on partition 1 , others on partition 2 (depends where the process instance is started)\r\n- When the process is deleted , Zeebe notifies tasklist with partitionId=1 (It is expected to receive notifications for all partitions about process deletion)\r\n- We delete only tasks on partition 1\r\n\r\nI will check with Zeebe team, why notification is sent only for one partition\r\n\r\n**Update:** Actually we are receiving the event for both partitions, I will check why the partition 2 event was skipped\r\n\r\n**Update 2:** I confirm that for PROCESS records we handle the events for one single partition https://github.com/camunda/tasklist/blob/89f0ea75f7835485ffae79184cf34e5d2c3a5ccf/importer/src/main/java/io/camunda/tasklist/zeebeimport/RecordsReaderHolder.java#L54-L55\r\nI will remove the filtering on `partitionId` for the deletion\n esraagamal6: Testing updates:\r\nWhen process  has more than 10 instances to be deleted some of them are displayed in tasklist after deletion on openSearch\n houssain-barouni: > Testing updates: When process has more than 10 instances to be deleted some of them are displayed in tasklist after deletion on openSearch\r\n\r\n@esraagamal6 \r\nScrolling in Opensearch was broken (it affects also master), we were fetching only 10 first results only. I have fixed it.\r\nExample of usecase affected by broken opensearch scrolling in master:\r\n- Create 11 tasks having a variable varA=foo\r\n- Do a search task query with varA=foo\r\n- You will notice that only 10 tasks are returned instead of 11\n esraagamal6: @houssain-barouni Tested OK",
    "title": "feat: Delete process definition in Tasklist"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3749",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "Related to https://github.com/bpmn-io/form-js/pull/842\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n0 files   -   94  0 suites   - 94   0s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 1h 46m 29s\n0 tests  - 480  0 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 470  0 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\")  - 10  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n0 runs   - 505  0 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 494  0 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\")  - 10  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\")  - 1 \n\nResults for commit 580a84cd. ± Comparison against base commit 8e7dbb10.\n\n[test-results]:data:application/gzip;base64,H4sIAPQPSmUC/1WMywrDIBBFfyW47mIQNaY/U+xEYcjD4uiq5N+bpqHR3T3nwnmLQLNnce/g1gkulP8wluQyxfXE/chc7wcXxFZM9GpEcDQ3wqcU02lSWbmade7HV+3gKnZw3cK4LJR3ENqCswpHkAMaJ50EZbXEfgjGwJd6JTX6p9g+smoN2vsAAAA=\n\n github-actions[bot]: ## Test Results\n  94 files  +  28    94 suites  +28   1h 43m 13s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 11m 21s\n480 tests +162  470 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +157  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +5  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n502 runs  +162  492 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +157  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +5  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit 130d4f6b. ± Comparison against base commit bc4b5922.\n\n<details>\n  <summary>This pull request <b>removes</b> 70 and <b>adds</b> 232 tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.ProbesTestIT ‑ testIsNotReady\nio.camunda.tasklist.ProbesTestIT ‑ testIsReady\nio.camunda.tasklist.es.ReindexIT ‑ reindexArchivedIndices\nio.camunda.tasklist.es.ReindexIT ‑ resetIndexSettings\nio.camunda.tasklist.util.StackdriverJSONLayoutTest ‑ testLayout\nio.camunda.tasklist.webapp.BackupServiceTest ‑ shouldFailCreateBackupOn1stRequestFailedWithConnectionError\nio.camunda.tasklist.webapp.BackupServiceTest ‑ shouldFailCreateBackupOn2ndRequestFailedWithConnectionError\nio.camunda.tasklist.webapp.BackupServiceTest ‑ shouldFailCreateBackupOnBackupIdAlreadyExists\nio.camunda.tasklist.webapp.BackupServiceTest ‑ shouldFailCreateBackupOnEmptyBackupId\nio.camunda.tasklist.webapp.BackupServiceTest ‑ shouldFailCreateBackupOnNonExistingRepository\n…\n```\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ testIsNotReady\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ testIsReady\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.config.GenerateOpenApiIT ‑ testSwaggerUIIsLoaded\nio.camunda.tasklist.data.conditionals.DataBaseConditionTest ‑ matches(DataBaseCondition, String, boolean)[10]\nio.camunda.tasklist.data.conditionals.DataBaseConditionTest ‑ matches(DataBaseCondition, String, boolean)[1]\nio.camunda.tasklist.data.conditionals.DataBaseConditionTest ‑ matches(DataBaseCondition, String, boolean)[2]\nio.camunda.tasklist.data.conditionals.DataBaseConditionTest ‑ matches(DataBaseCondition, String, boolean)[3]\nio.camunda.tasklist.data.conditionals.DataBaseConditionTest ‑ matches(DataBaseCondition, String, boolean)[4]\nio.camunda.tasklist.data.conditionals.DataBaseConditionTest ‑ matches(DataBaseCondition, String, boolean)[5]\n…\n```\n</details>\n\n<details>\n  <summary>This pull request <b>removes</b> 1 skipped test and <b>adds</b> 6 skipped tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.webapp.es.dao.GenericDAOTest ‑ insertShouldReturnExpectedResponse\n```\n\n```\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.os.OpenSearchConnectorSSLAuthIT ‑ canConnect\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportRetryAfterFailureOpenSearchIT ‑ Unknown test\n```\n</details>\n\n[test-results]:data:application/gzip;base64,H4sIAMmkTGUC/03MQQ6DIBCF4asY1l2AIEgv08AICalKg7BqevcOxhZm93+TvDfxYXUHuQ9a3AZylJBbLSWZHOKOLZnmKPjM9S1m+qvHUQAqqY6e4YXEmngTVpQGLqWYLkllr6MTHa/4b+om3eQJ3eLZ/SDEbQsZgzBOF+GlVc6BAuUpl9Qa4dQ0gx4Z81w6i0c+X0vns3gKAQAA\n\n:recycle: This comment has been updated with latest results.\n pinussilvestrus: @vsgoulart looks good 👍 ✅ ",
    "title": "feat(form): replace carbon-styles with SASS stylesheet"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3746",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "🚀 New Features",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3705\r\n\r\n## Description\r\n\r\n- Add support to Form Deletion for importer 8.4.0 (No need for 8.3.0 as this resource is not supported by zeebe there)\r\n- Update the integration tests\r\n- The APIs are ready for deal with deletion already in another PRs that were already merged.\r\n\r\n**PS - The number of commits is because the initial base branch was not master, :)** \r\n\r\nFor test:\r\nCheck the test `getLinkedFormHighestVersionWithFormDeletion` to understand how Java Client works\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  94 files  ±0    94 suites  ±0   1h 43m 25s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 1m 4s\n480 tests ±0  470 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n502 runs  ±0  492 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit 0eb0f3d0. ± Comparison against base commit 5b3c1fcf.\n\n<details>\n  <summary>This pull request <b>removes</b> 2 and <b>adds</b> 2 tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.webapp.api.rest.v1.controllers.FormControllerIT ‑ getLinkedFormHighestVersion\nio.camunda.tasklist.webapp.api.rest.v1.controllers.FormControllerIT ‑ getLinkedFormHighestVersionV1\n```\n\n```\nio.camunda.tasklist.webapp.api.rest.v1.controllers.FormControllerIT ‑ getLinkedFormHighestVersionWithFormDeletion\nio.camunda.tasklist.webapp.api.rest.v1.controllers.FormControllerIT ‑ getLinkedFormVersionV1\n```\n</details>\n\n[test-results]:data:application/gzip;base64,H4sIALpSU2UC/03MSw6DIBSF4a0Yxh1cFIXbzTQ8E1KVBmHUdO8FYwvD/zvJeRPnV3uQ+4DsNpAj+9TK5CiTD3vpZYS5SBlTnZmAXz2OrHUl3tHTvwrRJk76tUgDG2OIl8S819MZxiv+n9ikuzyhezy7P9Rh23wqQcAqcJMBQ0frkGsQyBUybgVXSiJzgFRPYiGfL00LwhQKAQAA\n\n:recycle: This comment has been updated with latest results.\n nathansandi: > I have one comment and one question :)\r\n\r\nThanks for the comments/checks @houssain-barouni , I fix that in the last commit. \n marcosgvieira: @nathansandi as @houssain-barouni already approved this changes, please merge them.",
    "title": "feat: add the java event for the form deletion "
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3967",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "…A_TASKLIST_* env variables\r\n\r\n<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3933 \r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  96 files  ±0    96 suites  ±0   1h 47m 29s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 3m 16s\n496 tests ±0  486 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n518 runs  ±0  508 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit feeeb28e. ± Comparison against base commit 4e9007b0.\n\n[test-results]:data:application/gzip;base64,H4sIANR9cGUC/03MyQ7CIBSF4VdpWLsoU6W+jGG4JMS2GIZV47sLpArL/zvJOZF1G0T0mNblNqGYXeplcpDJ+aP0wthapIypzqztrZ4xa11JDPRy70J4/ouVbivSAULw4ZKQj3rKsbji98nnLsNlg+Gx9Xio/b67VAJZAFBEgAFGBcOg79IqJY0ijFDODTZEUkk1+nwBSfjn+QoBAAA=\n\n:recycle: This comment has been updated with latest results.",
    "title": "fix: Some Identity configuration parameters are not taken from CAMUND…"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3955",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\ncatching the exception reported in https://github.com/camunda/tasklist/issues/3939\r\nuntil we find a long term fix\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n212 tests  +212   208 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +208   2m 10s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 2m 10s\n  34 suites +  34       0 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±    0 \n  34 files   +  34       4 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") +    4 \n\nFor more details on these failures, see [this check](https://github.com/camunda/tasklist/runs/19337063992).\n\nResults for commit 9ebf0921. ± Comparison against base commit 778199d1.\n\n[test-results]:data:application/gzip;base64,H4sIAM5Qb2UC/1WMyw7CIBBFf6Vh7WJ42II/09ApJMS2GB4r478LVUtdnnNnzpNYt5hIbh0Xl47E7FKjOQednN8KUw5FlC3VlVH2ozFmxKpANnV3j6KOj9FqtxQhDmFC8OF7EvLWmhX+kx/Tijufgjufe+jX1aUCRJnJgmIUhVZw5XSSaIceBtbPYLQBhZJZoxV5vQENXTDaBwEAAA==\n\n github-actions[bot]: ## Test Results\n  96 files  +  96    96 suites  +96   1h 52m 7s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 1h 52m 7s\n496 tests +496  486 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +486  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +10  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n518 runs  +518  508 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +508  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +10  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit ebd1db19. ± Comparison against base commit 778199d1.\n\n[test-results]:data:application/gzip;base64,H4sIAMNab2UC/03MTQ7CIBhF0a00jB0A8utmDHzQhNgWQ2HUuHeBVMvwnpe8A81h8Tt6TFrcJrSXkK9yJZkc4lZbSCqr1DG3mfW913MvAI3UQK/wrkTwX2YTlioX+JRiOiWVrZ1yos74fXJ8yXDZYXjsPR5CXNeQayBvHXGWaMMs5swK0Bx7TjFIqoERoeCONacKfb41VKOZCgEAAA==\n\n:recycle: This comment has been updated with latest results.",
    "title": "fix: temporar fix for clear scroll for AWS opensearch"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3904",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3903\r\n\r\nhttps://app.incident.io/camunda/incidents/716\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  95 files  ±0    95 suites  ±0   1h 46m 20s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 8m 17s\n480 tests ±0  470 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n504 runs  +2  492 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0  2 [:fire:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"test errors\") +2 \n\nResults for commit a39b4232. ± Comparison against base commit 191098b1.\n\n[test-results]:data:application/gzip;base64,H4sIABA1ZWUC/03MSw7DIAxF0a1EjDtIbUJCN1NBAAk1n4rPqOrea6I0MLzH8vsw5xcb2aOTw61jMftUy+Sgkt83aoFTT0LHVM681jPmeS40NvTyb6J7Faf8QlLBhrCHU0LeyujQ8zOuTQmXNJMHNItH/wfLx7yvq08UTKHUHBDkMGnoDYAAoREMjpwMjJUWhUNg3x+WvZ/kCgEAAA==\n\n:recycle: This comment has been updated with latest results.\n marcosgvieira: I'm merging this as it's already in production for a few customers - the only change is that I removed the code that was importing processes and forms from Optimize.",
    "title": "fix: creating aliases in case they don't exist"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3940",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nArchiverIT.shouldDeleteProcessInstanceRelatedData was stuck and makes run-os timing out\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  95 files   - 1    95 suites   - 1   1h 38m 7s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 4m 36s\n486 tests  - 2  476 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 2  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n510 runs   - 3  498 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 4  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\")  - 1  2 [:fire:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"test errors\") +2 \n\nResults for commit 65468206. ± Comparison against base commit 13a443dd.\n\n<details>\n  <summary>This pull request <b>removes</b> 2 tests.</summary>\n\n```\nio.camunda.tasklist.webapp.mt.MultiTenancyIT ‑ canAssignOnlyUserTenantsTasks\nio.camunda.tasklist.webapp.mt.MultiTenancyIT ‑ searchProcessesShouldReturnOnlyUserTenantsOwnedProcesses\n```\n</details>\n\n[test-results]:data:application/gzip;base64,H4sIAIZGbmUC/03Myw6DIBCF4VcxrLtAZIaxL9PghYTUS4OwMn33jqagy/87ydmF89O4iWfVwqMSW/LxqiEFG/26cAORYeExHrMmzPXaUt8fZG709h+mWhZx1k8sF4whrOEvIS3HKdQ5ymdLRW6XJ9wez86HiqFf59lHDoGgkZTEWnWdBa061E4TNDgYg0ZKapyyQE58f2lDLXcKAQAA\n\n:recycle: This comment has been updated with latest results.\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3942",
    "title": "fix: Fix Archiving for Opensearch"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3452",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3451 \r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  95 files  ±0    95 suites  ±0   1h 38m 56s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 3m 6s\n486 tests ±0  476 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n508 runs  ±0  498 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit f88582c3. ± Comparison against base commit 6ff7d0e3.\n\n[test-results]:data:application/gzip;base64,H4sIAIoEaWUC/03MywrDIBCF4VcJrrswXpqxL1PEC0iTWIyuQt+9Ywjqavi/gXMSH1Z3kNek5GMiRwm5ly1J5xB3bKn4EwWfub4FtHofxZhKy0Cf8EWaaROvw4rSwaUU0y2p7HVUUrijbaouw+QFw+LV46CJ2xYyBvEAEpjhmnuxcMmtnqnVVjqGRxkKzjOwAsjvDzrSAlEKAQAA\n\n:recycle: This comment has been updated with latest results.\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3934",
    "title": "fix: apply `rolloverBatchSize` when collecting instances to archive"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3896",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "## Description\r\n\r\nFix for FE be able to threat the 404 exception for get forms on Start Process by Form\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n",
    "title": "fix: return formId instead of null when has no form active"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3887",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3886\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\nAdding support to AWS OpenSearch.\r\n\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  96 files  ±0    96 suites  ±0   1h 41m 59s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 2m 52s\n482 tests ±0  472 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n507 runs  +3  496 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") +2  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  1 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") +1 \n\nResults for commit cbbf32d0. ± Comparison against base commit b1f46cd7.\n\n[test-results]:data:application/gzip;base64,H4sIACVdX2UC/03OTQ6DIBCG4asY1l2AIkgv0+DAJKT+NAgr07sXLCrL95nky+wE3WQ38myUeDRkiy7cZaLXwa1LasGYSpKOIZ/50J712iJAJlnR230SMXoJajclucF6v/oiPi55tKeyxLV5vPGXavKAssjOrgdhnWcXUhAYR+xaQ7mQ2JpOWA7KWGOp5j0dOCpNEYYOyfcH0i1jBQoBAAA=\n\n:recycle: This comment has been updated with latest results.",
    "title": "fix: fixing AWS OpenSearch Connection"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3818",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3785\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [x] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [x] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3865",
    "title": "fix: Prevent big forms from being cropped"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3778",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3707\r\n\r\n## Description\r\n\r\n<!-- Please explain the changes you made here. -->\r\n\r\nAdd error message when the variables request fails\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [x] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [x] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [x] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3864",
    "title": "fix: Show error messages when variable fetch fails"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3852",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3822\r\n\r\n## Description\r\n\r\n- Apply the change made in 8.3 to master\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  94 files  ±0    94 suites  ±0   1h 52m 20s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") + 19m 31s\n480 tests ±0  470 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n502 runs  ±0  492 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit ac95cd47. ± Comparison against base commit ce78845e.\n\n[test-results]:data:application/gzip;base64,H4sIAJDqW2UC/03MSw6DIBSF4a0Yxh0ogkA309ALJKQqDY+R6d57MUYY/t9JzkGcX20iz0Gxx0BS8bmVKVFnH3bsRbARBcdcZybveqUCUEl09PFfpKmJ035FaWBjDPGSWPZ6ykd6xf2pmnSXJ3SPZ/eHELbNZwyiQXEwTHBqZiPelEqtJ2fBObvMVkjjFKUwc/L7A0KWcmgKAQAA\n\n:recycle: This comment has been updated with latest results.",
    "title": "fix: extract the var retrieve from the loop + add log messages (#3817)"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3848",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "<!-- Please link the related GitHub issue here -->\r\n\r\nCloses #3847 \r\n\r\n## Description\r\n\r\n- FE are not able to read null with quotes, as this fix was applied in the past to avoid nullpointer exception on backend\r\n- Object mapper offers null node, so this string was replaced to the object mapper method\r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  94 files  ±0    94 suites  ±0   1h 35m 16s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 20m 40s\n480 tests ±0  470 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n502 runs  ±0  492 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\") ±0  10 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") ±0  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n\nResults for commit a2f39483. ± Comparison against base commit f3353f17.\n\n[test-results]:data:application/gzip;base64,H4sIAIyPW2UC/03MQQ6DIBRF0a0Yxh2AgEA309AvJKQqDcLIdO/9GFsY3vOSdxAfFreT+2DEbSB7CbnVXJLNIW7YUrEJBcdcZ6Hprx57AaikOnqFNxJr4m1YUBq4lGK6JJWtnko6XvH/NE26yxO6x7P7Q4jrGjIGsaPnRmjOYOZOOK8spzAJaaTS3AA8QYNiUpPPF63Lz1AKAQAA\n\n:recycle: This comment has been updated with latest results.\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3849",
    "title": "fix: replace null string to object mapper node"
  },
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3755",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "Closes #3755  (Already closed - Bug related)\r\n\r\n## Description\r\n\r\nFix the bug for tasks, the same as happens to start process by form \r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  94 files  ±0    94 suites  ±0   1h 32m 41s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 11m 55s\n480 tests ±0  469 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 1  11 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +1  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n504 runs  +2  491 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 1  11 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +1  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0  2 [:fire:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"test errors\") +2 \n\nResults for commit 539f473b. ± Comparison against base commit 6b83c9c4.\n\n<details>\n  <summary>This pull request <b>removes</b> 13 and <b>adds</b> 13 tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ testIsNotReady\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ testIsReady\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.es.ElasticsearchConnectorBasicAuthIT ‑ canConnect\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ reindexArchivedIndices\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ resetIndexSettings\nio.camunda.tasklist.management.HealthCheckAuthenticationIT ‑ testHealthStateEndpointIsNotSecured\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyElasticSearchIT ‑ shouldImportAllTasks\n…\n```\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ testIsNotReady\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ testIsReady\nio.camunda.tasklist.es.ElasticsearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.management.HealthCheckAuthenticationIT ‑ Unknown test\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ canConnect\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ reindexArchivedIndices\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ resetIndexSettings\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyElasticSearchIT ‑ Unknown test\n…\n```\n</details>\n\n<details>\n  <summary>This pull request <b>removes</b> 5 skipped tests and <b>adds</b> 6 skipped tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportRetryAfterFailureOpenSearchIT ‑ Unknown test\n```\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.es.ElasticsearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.management.HealthCheckAuthenticationIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportRetryAfterFailureElasticSearchIT ‑ Unknown test\n```\n</details>\n\n[test-results]:data:application/gzip;base64,H4sIAKeVU2UC/02MQQ6DIBQFr2JYdwHCF+hljCgkpCoNwsr07v0YFZczL2924vxsN/JutHg1ZMs+VZpyHJIPKzJAx9DgmMosFL2o3/I4FtXpqj7+i4rdl94NfkZTXzbGEE8T81qiQMUJd1Oz2zySh3gUD76CLYoxLItPCAS4dkJyo4CqlonJWjDGgZTOGJiU5Bp4J6Uivz+eJbnUCgEAAA==\n\n:recycle: This comment has been updated with latest results.\n marcosgvieira: @nathansandi Is this still a draft or is it ready to review?\n nathansandi: Hi @marcosgvieira I just moved to review\r\n\r\nIt was a draft, in the time I open because I was trying to reproduce the error (but could not for tasks), but at the same time I think its a gain to put this in PROD to prevent bugs related to nullable fields on  JSON. \n marcosgvieira: @nathansandi, just for my understanding what happens when the `return objectMapper.readValue(variable.getValue(), Object.class);` against the \"null\" value that causes the error?\n nathansandi: > @nathansandi, just for my understanding what happens when the `return objectMapper.readValue(variable.getValue(), Object.class);` against the \"null\" value that causes the error?\r\n\r\n\r\nSimilar to Start Process by a form (PS: Maybe this was already threaten over forms for Tasks), when calling objectMapper.readValue(variable.getValue(), Object.class);, Jackson (the underlying library used by objectMapper) attempts to deserialize the JSON string in variable.getValue() into a Java object of type Object. The problem arises when the JSON string represents the literal string \"null\" rather than the JSON null value.\r\n\r\nIn JSON, the value null is a special keyword indicating the absence of a value or a null value. It's not represented as a string, but as the literal null. For example:\r\n\r\n```\r\n{\r\n  \"someKey\": null\r\n}\r\n```\r\n\r\nIn contrast, if you have a string \"null\" in your JSON, it is treated as a regular string and not a null value:\r\n\r\n```\r\n{\r\n  \"someKey\": \"null\"\r\n}\r\n```\r\n\r\nSo, when you attempt to deserialize the string \"null\" into an Object using objectMapper.readValue(variable.getValue(), Object.class);, Jackson tries to parse it as a regular string, not as the special null value, resulting in the actual string \"null\" being returned.\r\n\r\nTo handle this situation, I've added a check:\r\n\r\n```\r\nif (variable.getValue().equals(\"null\")) {\r\n  return \"null\"; // JSON Object null must be instanced like \"null\", also should not send to\r\n  // objectMapper null values\r\n}\r\n```\r\n\r\nThis check ensures that if the variable.getValue() is the string \"null,\" you return the string \"null\" instead of trying to deserialize it using Jackson. This way, you're preserving the original intent of the \"null\" string in your JSON data.\r\n\r\n\r\n\r\n\r\n\n marcosgvieira: > So, when you attempt to deserialize the string \"null\" into an Object using objectMapper.readValue(variable.getValue(), Object.class);, Jackson tries to parse it as a regular string, not as the special null value, resulting in the actual string \"null\" being returned.\r\n\r\nSo isn't it the same result as the new condition we are adding?\n nathansandi: > So isn't it the same result as the new condition we are adding?\r\n\r\nYes, In such a case, you explicitly return the string \"null\" without attempting to deserialize it using objectMapper.\r\nThe problem would be if go to Object mapper with the \"null\" value \r\n\r\nThis code is handling both the case where the input is the string \"null\" and the case where it's a valid JSON string. The added condition ensures that you handle the special case of the string \"null\" without attempting unnecessary deserialization. The error was caused when goes to Object Mapper, trying to serialize the null json value\r\n\n marcosgvieira: > e the input is the string \"null\" and the case where it's a valid JSON string. The added condition ensures that you handle the special case of the string \"null\" without attempting unnecessary deserialization. The error was caused when goes to Object Mapper, trying to serialize the null json value\r\n\r\nThen if the result is the same I don't think we are fixing any error as the behavior is the same (also we are adding a condition to all the cases to try to avoid a deserialization in a case that doesn't happen so often) - should we really add this condition? The #3585 also cannot be closed by this PR as it's covered in another task by @houssain-barouni can you check if you referenced the right ticket?\n marcosgvieira: After a chat with @nathansandi he explained that when passing \"null\" to the objectMapper a NullPointer is throwed, so this is the reason for the condition.\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3810\n github-actions[bot]: Successfully created backport PR for `stable/8.2`:\n- #3811",
    "title": "fix: treat null values for forms in Tasks"
  }
]