[
  {
    "release": "8.4.0-alpha2",
    "url": "https://github.com/camunda/tasklist/issues/3755",
    "component": "Tasklist",
    "subcomponent": "Misc",
    "context": "💊 Bugfixes",
    "gitHubText": "Closes #3755  (Already closed - Bug related)\r\n\r\n## Description\r\n\r\nFix the bug for tasks, the same as happens to start process by form \r\n\r\n## Definition of Done\r\n\r\n<!-- As author please check the items that apply before requesting a review. -->\r\n\r\n_Not all items need to be done depending on the issue and the pull request._\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n\r\nTesting:\r\n\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the author\r\n\r\nDocumentation:\r\n\r\n- [ ] If documentation needs to be updated, an issue is created in the [camunda-platform-docs](https://github.com/camunda/camunda-platform-docs) repo, and the issue is added to our Operate/Tasklist project board.\r\n\r\n## Definition of Reviewed\r\n\r\n<!-- As a reviewer please check the items that apply before approving this PR -->\r\n\r\n- [ ] All acceptance criteria described in the issue are met\r\n- [ ] Unit/integration tests are written, that verify all acceptance criteria of the issue\r\n- [ ] E2E tests are written, if the acceptance criteria can't be covered in unit/integration tests\r\n- [ ] The fix/feature is tested manually by the reviewer\r\n\n\n github-actions[bot]: ## Test Results\n  94 files  ±0    94 suites  ±0   1h 32m 41s [:stopwatch:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"duration of all tests\") - 11m 55s\n480 tests ±0  469 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 1  11 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +1  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0 \n504 runs  +2  491 [:heavy_check_mark:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"passed tests\")  - 1  11 [:zzz:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"skipped / disabled tests\") +1  0 [:x:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"failed tests\") ±0  2 [:fire:](https://github.com/EnricoMi/publish-unit-test-result-action/blob/v2.11.0/README.md#the-symbols \"test errors\") +2 \n\nResults for commit 539f473b. ± Comparison against base commit 6b83c9c4.\n\n<details>\n  <summary>This pull request <b>removes</b> 13 and <b>adds</b> 13 tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ testIsNotReady\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ testIsReady\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.es.ElasticsearchConnectorBasicAuthIT ‑ canConnect\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ reindexArchivedIndices\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ resetIndexSettings\nio.camunda.tasklist.management.HealthCheckAuthenticationIT ‑ testHealthStateEndpointIsNotSecured\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyElasticSearchIT ‑ shouldImportAllTasks\n…\n```\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ testIsNotReady\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ testIsReady\nio.camunda.tasklist.es.ElasticsearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.management.HealthCheckAuthenticationIT ‑ Unknown test\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ canConnect\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ reindexArchivedIndices\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ resetIndexSettings\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyElasticSearchIT ‑ Unknown test\n…\n```\n</details>\n\n<details>\n  <summary>This pull request <b>removes</b> 5 skipped tests and <b>adds</b> 6 skipped tests. <i>Note that renamed tests count towards both.</i></summary>\n\n```\nio.camunda.tasklist.ProbesTestOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.os.OpenSearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.os.ReindexOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyOpenSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportRetryAfterFailureOpenSearchIT ‑ Unknown test\n```\n\n```\nio.camunda.tasklist.ProbesTestElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.es.ElasticsearchConnectorBasicAuthIT ‑ Unknown test\nio.camunda.tasklist.es.ReindexElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.management.HealthCheckAuthenticationIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportIdempotencyElasticSearchIT ‑ Unknown test\nio.camunda.tasklist.zeebeimport.ZeebeImportRetryAfterFailureElasticSearchIT ‑ Unknown test\n```\n</details>\n\n[test-results]:data:application/gzip;base64,H4sIAKeVU2UC/02MQQ6DIBQFr2JYdwHCF+hljCgkpCoNwsr07v0YFZczL2924vxsN/JutHg1ZMs+VZpyHJIPKzJAx9DgmMosFL2o3/I4FtXpqj7+i4rdl94NfkZTXzbGEE8T81qiQMUJd1Oz2zySh3gUD76CLYoxLItPCAS4dkJyo4CqlonJWjDGgZTOGJiU5Bp4J6Uivz+eJbnUCgEAAA==\n\n:recycle: This comment has been updated with latest results.\n marcosgvieira: @nathansandi Is this still a draft or is it ready to review?\n nathansandi: Hi @marcosgvieira I just moved to review\r\n\r\nIt was a draft, in the time I open because I was trying to reproduce the error (but could not for tasks), but at the same time I think its a gain to put this in PROD to prevent bugs related to nullable fields on  JSON. \n marcosgvieira: @nathansandi, just for my understanding what happens when the `return objectMapper.readValue(variable.getValue(), Object.class);` against the \"null\" value that causes the error?\n nathansandi: > @nathansandi, just for my understanding what happens when the `return objectMapper.readValue(variable.getValue(), Object.class);` against the \"null\" value that causes the error?\r\n\r\n\r\nSimilar to Start Process by a form (PS: Maybe this was already threaten over forms for Tasks), when calling objectMapper.readValue(variable.getValue(), Object.class);, Jackson (the underlying library used by objectMapper) attempts to deserialize the JSON string in variable.getValue() into a Java object of type Object. The problem arises when the JSON string represents the literal string \"null\" rather than the JSON null value.\r\n\r\nIn JSON, the value null is a special keyword indicating the absence of a value or a null value. It's not represented as a string, but as the literal null. For example:\r\n\r\n```\r\n{\r\n  \"someKey\": null\r\n}\r\n```\r\n\r\nIn contrast, if you have a string \"null\" in your JSON, it is treated as a regular string and not a null value:\r\n\r\n```\r\n{\r\n  \"someKey\": \"null\"\r\n}\r\n```\r\n\r\nSo, when you attempt to deserialize the string \"null\" into an Object using objectMapper.readValue(variable.getValue(), Object.class);, Jackson tries to parse it as a regular string, not as the special null value, resulting in the actual string \"null\" being returned.\r\n\r\nTo handle this situation, I've added a check:\r\n\r\n```\r\nif (variable.getValue().equals(\"null\")) {\r\n  return \"null\"; // JSON Object null must be instanced like \"null\", also should not send to\r\n  // objectMapper null values\r\n}\r\n```\r\n\r\nThis check ensures that if the variable.getValue() is the string \"null,\" you return the string \"null\" instead of trying to deserialize it using Jackson. This way, you're preserving the original intent of the \"null\" string in your JSON data.\r\n\r\n\r\n\r\n\r\n\n marcosgvieira: > So, when you attempt to deserialize the string \"null\" into an Object using objectMapper.readValue(variable.getValue(), Object.class);, Jackson tries to parse it as a regular string, not as the special null value, resulting in the actual string \"null\" being returned.\r\n\r\nSo isn't it the same result as the new condition we are adding?\n nathansandi: > So isn't it the same result as the new condition we are adding?\r\n\r\nYes, In such a case, you explicitly return the string \"null\" without attempting to deserialize it using objectMapper.\r\nThe problem would be if go to Object mapper with the \"null\" value \r\n\r\nThis code is handling both the case where the input is the string \"null\" and the case where it's a valid JSON string. The added condition ensures that you handle the special case of the string \"null\" without attempting unnecessary deserialization. The error was caused when goes to Object Mapper, trying to serialize the null json value\r\n\n marcosgvieira: > e the input is the string \"null\" and the case where it's a valid JSON string. The added condition ensures that you handle the special case of the string \"null\" without attempting unnecessary deserialization. The error was caused when goes to Object Mapper, trying to serialize the null json value\r\n\r\nThen if the result is the same I don't think we are fixing any error as the behavior is the same (also we are adding a condition to all the cases to try to avoid a deserialization in a case that doesn't happen so often) - should we really add this condition? The #3585 also cannot be closed by this PR as it's covered in another task by @houssain-barouni can you check if you referenced the right ticket?\n marcosgvieira: After a chat with @nathansandi he explained that when passing \"null\" to the objectMapper a NullPointer is throwed, so this is the reason for the condition.\n github-actions[bot]: Successfully created backport PR for `stable/8.3`:\n- #3810\n github-actions[bot]: Successfully created backport PR for `stable/8.2`:\n- #3811",
    "title": "fix: treat null values for forms in Tasks",
    "releaseNoteText": "Error: An error occurred while generating a response."
  }
]